"use strict";(self.webpackChunkunum_id=self.webpackChunkunum_id||[]).push([[302],{5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),l=a(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>T});var n=a(7462),l=a(7294),r=a(6010),i=a(2466),o=a(6775),s=a(1980),u=a(7392),p=a(12);function d(e){return function(e){return l.Children.map(e,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:l}}=e;return{value:t,label:a,attributes:n,default:l}}))}function m(e){const{values:t,children:a}=e;return(0,l.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=m(e),[i,o]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[s,u]=g({queryString:a,groupId:n}),[d,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,p.Nk)(a);return[n,(0,l.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),k=(()=>{const e=s??d;return c({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{k&&o(k)}),[k]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!c({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),h(e)}),[u,h,r]),tabValues:r}}var k=a(2389);const b="tabList__CuJ",f="tabItem_LNqP";function v(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==o&&(d(t),s(n))},c=e=>{var t;let a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;a=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;a=p[t]??p[p.length-1];break}}null==(t=a)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>p.push(e),onKeyDown:c,onClick:m},i,{className:(0,r.Z)("tabs__item",f,null==i?void 0:i.className,{"tabs__item--active":o===t})}),a??t)})))}function N(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=h(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",b)},l.createElement(v,(0,n.Z)({},e,t)),l.createElement(N,(0,n.Z)({},e,t)))}function T(e){const t=(0,k.Z)();return l.createElement(y,(0,n.Z)({key:String(t)},e))}},3535:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var n=a(7462),l=(a(7294),a(3905)),r=(a(7874),a(106)),i=a(4866),o=a(5162);const s={id:"usage-guide",title:"Usage Guide",sidebar_label:"Usage Guide",slug:"/usage-guide"},u=void 0,p={unversionedId:"usage-guide",id:"usage-guide",title:"Usage Guide",description:"Write content using GitHub-flavored Markdown syntax.",source:"@site/docs/usage-guide.mdx",sourceDirName:".",slug:"/usage-guide",permalink:"/usage-guide",draft:!1,tags:[],version:"current",frontMatter:{id:"usage-guide",title:"Usage Guide",sidebar_label:"Usage Guide",slug:"/usage-guide"}},d={},m=[{value:"Code",id:"code",level:2},{value:"Syntax Highlighting",id:"syntax-highlighting",level:3},{value:"Line Highlighting",id:"line-highlighting",level:3},{value:"Tabs",id:"tabs",level:3},{value:"Live Editor",id:"live-editor",level:3},{value:"Admonitions",id:"admonitions",level:2},{value:"Images",id:"images",level:2},{value:"Tables",id:"tables",level:2},{value:"Tooltips",id:"tooltips",level:2},{value:"Local",id:"local",level:3},{value:"Global",id:"global",level:3}],c={toc:m};function g(e){let{components:t,...s}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Write content using ",(0,l.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/"},"GitHub-flavored Markdown syntax"),"."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"code"},"Code"),(0,l.kt)("h3",{id:"syntax-highlighting"},"Syntax Highlighting"),(0,l.kt)("p",null,"For example, this..."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"```javascript\nvar s = 'JavaScript syntax highlighting';\nalert(s);\n```\n")),(0,l.kt)("p",null,"...renders to:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"var s = 'JavaScript syntax highlighting';\nalert(s);\n")),(0,l.kt)("h3",{id:"line-highlighting"},"Line Highlighting"),(0,l.kt)("p",null,"Use e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"{2}")," after the langauge name (and a space):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:"{2}","{2}":!0},"function highlightMe() {\n  console.log('This line can be highlighted!');\n}\n")),(0,l.kt)("h3",{id:"tabs"},"Tabs"),(0,l.kt)("p",null,"Tabs can be used generally, but they're useful for language selection:"),(0,l.kt)(i.Z,{groupId:"languages",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function helloWorld() {\n  console.log('Hello, world!');\n}\n"))),(0,l.kt)(o.Z,{value:"py",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def hello_world():\n  print 'Hello, world!'\n")))),(0,l.kt)("p",null,"To make multiple tab blocks update in sync, give all related tabs\nthe same ",(0,l.kt)("inlineCode",{parentName:"p"},"groupId")," prop. Note that doing this will persist the\nchoice in ",(0,l.kt)("inlineCode",{parentName:"p"},"localStorage")," and all ",(0,l.kt)("inlineCode",{parentName:"p"},"<Tab>")," instances with the\nsame ",(0,l.kt)("inlineCode",{parentName:"p"},"groupId")," will update automatically when the value of\none of them is changed. Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"groupId")," are globally-namespaced."),(0,l.kt)(i.Z,{groupId:"languages",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function goodbyeWorld() {\n  console.log('Goodbye, world :(');\n}\n"))),(0,l.kt)(o.Z,{value:"py",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def goodbye_world():\n  print 'Goodbye, world :('\n")))),(0,l.kt)("h3",{id:"live-editor"},"Live Editor"),(0,l.kt)("p",null,"You can make a live editor! Just add ",(0,l.kt)("inlineCode",{parentName:"p"},"live")," after the language name:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Clock(props) {\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return (\n    <div>\n      <h2>It is {date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"admonitions"},"Admonitions"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"This is a note")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"This is a tip")),(0,l.kt)("admonition",{type:"important"},(0,l.kt)("p",{parentName:"admonition"},"This is important")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"This is a caution")),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"This is a warning")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"images"},"Images"),(0,l.kt)("p",null,"Here's our logo (hover to see the title text):"),(0,l.kt)("p",null,"Inline-style: ",(0,l.kt)("img",{parentName:"p",src:"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png",alt:"alt text",title:"Logo Title Text 1"})),(0,l.kt)("p",null,"Reference-style: ",(0,l.kt)("img",{parentName:"p",src:"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png",alt:"alt text",title:"Logo Title Text 2"})),(0,l.kt)("p",null,"Images from any folder can be used by providing path to file. Path should be relative to the original markdown file or absolute to the ",(0,l.kt)("inlineCode",{parentName:"p"},"/static")," folder."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"img",src:a(4535).Z,width:"739",height:"141"})),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"tables"},"Tables"),(0,l.kt)("p",null,"Colons can be used to align columns."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Tables"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Are"),(0,l.kt)("th",{parentName:"tr",align:"right"},"Cool"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"col 3 is"),(0,l.kt)("td",{parentName:"tr",align:"center"},"right-aligned"),(0,l.kt)("td",{parentName:"tr",align:"right"},"\\$1600")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"col 2 is"),(0,l.kt)("td",{parentName:"tr",align:"center"},"centered"),(0,l.kt)("td",{parentName:"tr",align:"right"},"\\$12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zebra stripes"),(0,l.kt)("td",{parentName:"tr",align:"center"},"are neat"),(0,l.kt)("td",{parentName:"tr",align:"right"},"\\$1")))),(0,l.kt)("p",null,"There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Markdown"),(0,l.kt)("th",{parentName:"tr",align:null},"Less"),(0,l.kt)("th",{parentName:"tr",align:null},"Pretty"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Still")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"renders")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"nicely"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"3")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"tooltips"},"Tooltips"),(0,l.kt)("p",null,"We can use tooltips like ",(0,l.kt)(r.Z,{text:"Wow, a tooltip!",mdxType:"Tip"},"this")," to provide quick, inline definitions and explanations. "),(0,l.kt)("p",null,"Using these is super simple. Add these lines at the top of a ",(0,l.kt)("inlineCode",{parentName:"p"},".mdx")," file (below the file metadata):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="example.mdx"',title:'"example.mdx"'},"import TooltipWithDefaults from '../src/components/TooltipWithDefaults';\nimport Tip from '../src/components/Tip';\n")),(0,l.kt)("p",null,"And then you're ready to go. There are two kinds of tooltip:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"local (for one-time use), and"),(0,l.kt)("li",{parentName:"ol"},"global (for multiple uses).")),(0,l.kt)("h3",{id:"local"},"Local"),(0,l.kt)("p",null,"Local tooltips are defined on the spot, so they're best for one-time use. Just use a ",(0,l.kt)("inlineCode",{parentName:"p"},"<Tip>")," element and set the ",(0,l.kt)("inlineCode",{parentName:"p"},"text")," attribute. For example, this..."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tip text="Super helpful tooltip!">display text</Tip>\n')),(0,l.kt)("p",null,"... renders to: ",(0,l.kt)(r.Z,{text:"Super helpful tooltip!",mdxType:"Tip"},"display text"),"."),(0,l.kt)("h3",{id:"global"},"Global"),(0,l.kt)("p",null,"Global tooltips are defined globally so they can be used multiple times. This is especially useful for definitions. Just use an empty ",(0,l.kt)("inlineCode",{parentName:"p"},"<Tip>")," element and set the ",(0,l.kt)("inlineCode",{parentName:"p"},"type")," attribute (the display text is part of the definition). For example, this..."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tip type="credential"/>\n')),(0,l.kt)("p",null,"... renders to: ",(0,l.kt)(r.Z,{type:"credential",mdxType:"Tip"}),". (Setting the ",(0,l.kt)("inlineCode",{parentName:"p"},"text")," attribute or putting text in between ",(0,l.kt)("inlineCode",{parentName:"p"},"<Tip></Tip>")," tags does nothing.)"),(0,l.kt)("p",null,"To define a global tooltip, add an entry to the ",(0,l.kt)("inlineCode",{parentName:"p"},"tooltips")," object in ",(0,l.kt)("inlineCode",{parentName:"p"},"/src/components/Tip.jsx")," like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'const tooltips =  {\n  "display text": "tooltip text",\n}\n')),(0,l.kt)("p",null,"You can use a simple string like above, but you can also use any HTML to make much richer tooltips with multiple lines, formatting, links, etc."))}g.isMDXComponent=!0},4535:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/logo-f062ea0b0e318d3148c644163cc5e115.svg"}}]);