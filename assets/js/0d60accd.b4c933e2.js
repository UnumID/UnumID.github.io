"use strict";(self.webpackChunkverified_inc_docs=self.webpackChunkverified_inc_docs||[]).push([[2829],{4877:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>_,default:()=>A,frontMatter:()=>k,metadata:()=>F,toc:()=>I});var i=n(5893),a=n(1151),s=(n(7874),n(106)),r=n(7294),c=n(8716),l=n(624),o=n(1190);const d={container:"container__ccj",search:"search_dnlB","container-grid":"container-grid_gdNR","list-card":"list-card_xwza","list-card-skeleton":"list-card-skeleton_i4sb","coming-soon":"coming-soon_qq8j","list-card-title":"list-card-title_cv_5",pulse:"pulse_Dpg8"},h={container:"container_Yx8b",back:"back_YMET",header:"header_qWYl",title:"title_tglL",subtitle:"subtitle_n5yt","section-title":"section-title_JJIx","meta-container":"meta-container_AWlX",properties:"properties_IZUr","property-title":"property-title_jUnQ","properties-container":"properties-container_ik0p","property-field":"property-field_GOOn","property-span":"property-span_Kxn3","skeleton-title":"skeleton-title_nNzQ","skeleton-content-md":"skeleton-content-md_JFBE","skeleton-content-lg":"skeleton-content-lg_nAnC","skeleton-content-xl":"skeleton-content-xl_AAs6","attribute-container":"attribute-container_uCHO"},m=/([A-Z][a-z0-9]+)/gm,p=e=>e.split(m).filter((e=>e)).join(" "),u=e=>{let{value:t,onCredentialClick:n}=e;return Array.isArray(t)?(0,i.jsx)("ul",{style:{listStyleType:"decimal"},children:t.map(((e,t)=>(0,i.jsx)("li",{children:(0,i.jsx)(u,{value:e,onCredentialClick:n})},t)))}):"object"!=typeof t||Array.isArray(t)?(0,i.jsxs)("span",{className:"text--primary",children:[String(t),(a=t,/^\w+Credential$/.test(a)&&(0,i.jsx)("button",{className:"button button--sm button--outline button--primary margin-left--md",onClick:()=>n(t),children:"See Credential"}))]}):(0,i.jsx)("ul",{children:Object.entries(t).map(((e,t)=>{let[a,s]=e;return(0,i.jsxs)("li",{children:[(0,i.jsxs)("strong",{className:"text--padding-left--md margin-bottom--sm margin-top--md",children:[a,":"]})," ",(0,i.jsx)(u,{value:s,onCredentialClick:n})]},t)}))});var a};function x(e){let{schema:t,onRequestClose:n,onCredentialClick:a}=e;const[s,l]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{const e=setTimeout((()=>l(!1)),3e3);return()=>{clearTimeout(e)}}),[s]),(0,i.jsx)(c.E.div,{className:`${h.container} --ifm-modal-overlay`,initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},children:(0,i.jsxs)("div",{className:"margin-top--sm padding--lg",children:[(0,i.jsx)("button",{className:`${h.back} button button--md button--primary margin-bottom--lg`,onClick:n}),(0,i.jsxs)("div",{className:h.header,children:[(0,i.jsx)("button",{className:"button button--xs button--secondary",onClick:()=>{navigator.clipboard.writeText(JSON.stringify(t.raw,null,2)),l(!0)},children:s?"Copied!":"Copy schema"}),(0,i.jsx)("h4",{className:h.title,children:(0,i.jsx)(c.E.span,{layoutId:t.id,className:"margin-right--md",style:{display:"inline-block"},children:t.name})})]}),(0,i.jsx)("p",{children:t.id}),(0,i.jsx)(c.E.div,{initial:{opacity:0},animate:{opacity:1,transition:{delay:.3}},exit:{opacity:0},children:(0,i.jsx)(u,{value:(e=>{const t={...e};return delete t.raw,t})(t),onCredentialClick:a})})]})},t.id)}const j=e=>({$id:e,type:"object",comingSoon:!0,properties:{_:{description:"",examples:[],title:"",displayFormat:"String",input:{type:"Text"},type:"string"}}}),f={CreditCardCredential:{anyOf:[j("CreditCardNumberCredential"),j("CreditCardExpirationDateCredential"),j("CreditCardTypeCredential"),j("CreditCardTokenCredential"),j("BalanceCredential"),j("TransactionHistoryCredential")],$id:"CreditCardCredential",unevaluatedProperties:!1,comingSoon:!0},BankAccountCredential:{anyOf:[j("RoutingNumberCredential"),j("AccountNumberCredential"),j("BalanceCredential"),j("TransactionHistoryCredential")],$id:"BankAccountCredential",unevaluatedProperties:!1,comingSoon:!0},FraudInsightsCredential:{anyOf:[j("AuthoritativeSourceCheckCredential"),j("PEPCredential"),j("OFACCredential"),j("AdverseMediaScreenCredential")],$id:"FraudInsightsCredential",unevaluatedProperties:!1,comingSoon:!0}};function y(){return{async getSchemas(){var e,t;return{...await(e="https://schema-resolver.verified.inc/jsonSchema",t={method:"GET",mode:"cors"},fetch(e,t).then((e=>{if(e.ok)return e.json();throw new Error(`Http response error: ${e.status}`)}))),...f}}}}function g(e){let[t,n]=e;const{$id:i,...a}=n;return[t,{...a,id:t,name:p(i),raw:n}]}const C=e=>t=>{let[n]=t;return p(n).toLowerCase().indexOf(e.toLowerCase())>=0},v=(e,t)=>e.toLocaleString().localeCompare(t);function b(e){let{schema:t,onSchemaSelect:n}=e;const a={hidden:{opacity:0},show:{opacity:1},[`selected-${t.id}`]:{backgroundColor:"var(--ifm-color-primary)"},idle:{opacity:1,transition:{duration:0}},exit:{opacity:0}};return(0,i.jsxs)(c.E.div,{className:`${d["list-card"]} ${t.comingSoon?d["coming-soon"]:""}`,variants:a,whileHover:{backgroundColor:"var(--ifm-color-primary)"},onClick:()=>!t.comingSoon&&n(t),layout:!0,children:[(0,i.jsx)(c.E.h3,{layoutId:t.id,className:d["list-card-title"],children:t.name}),t.comingSoon&&(0,i.jsx)(c.E.span,{layoutId:t.id+"span",className:d["coming-soon"],children:"Coming soon!"})]},t.id)}function N(){return(0,i.jsx)("div",{className:d["list-card-skeleton"]})}function S(e){let{schemas:t}=e;const[n,a]=(0,r.useState)(null),[s,h]=(0,r.useState)(""),m=(0,r.useRef)(),[p,u]=(0,r.useState)("auto"),[j,f]=(0,r.useState)(0),y=(0,l.Y)(m,{amount:"some"}),[N,S]=(0,r.useState)(y),w=Object.entries(t).map(g),k=w.filter(C(s)).sort(v),_=(0,r.useMemo)((()=>n?`selected-${n.id}`:N?"idle":y?"show":void 0),[n,y,N]);return(0,r.useEffect)((()=>{N||y&&S(!0)}),[y,N]),(0,r.useEffect)((()=>{const e=new ResizeObserver((e=>{const t=e[0].contentRect.height;f((e=>Math.max(e,t))),u(t)}));return e.observe(m.current),()=>{e.disconnect()}}),[]),(0,i.jsx)(c.E.div,{className:d.container,animate:{height:n?j:p,transition:{duration:.2}},layout:!0,children:(0,i.jsxs)(c.E.div,{ref:m,children:[(0,i.jsxs)(c.E.div,{variants:{hidden:{},show:{transition:{staggerChildren:.025}},selected:{},idle:{}},initial:"hidden",animate:_,whileInView:"show",viewport:{once:!0,margin:"-50%"},children:[(0,i.jsx)("input",{className:d.search,placeholder:"Search for a schema e.g Email Credential",onChange:e=>h(e.target.value)}),!k.length&&(0,i.jsxs)("h2",{className:"text--center margin-top--lg margin-bottom--lg",children:["No schema found with term ",s]}),(0,i.jsx)(c.E.div,{className:d["container-grid"],children:(0,i.jsx)(o.M,{children:k.map((e=>{let[t,n]=e;return(0,i.jsx)(b,{schema:n,onSchemaSelect:a},t)}))})})]}),(0,i.jsx)(o.M,{initial:!1,children:n&&(0,i.jsx)(x,{schema:n,onRequestClose:()=>a(null),onCredentialClick:async e=>{a(null),await new Promise((e=>setTimeout(e,500)));const t=w.find((t=>t[0]===e))[1];a(t)}})})]})})}function w(e){const[t,n]=(0,r.useState)(!0),[a,s]=(0,r.useState)(null);return(0,r.useEffect)((()=>{n(!0),y().getSchemas().then((e=>{s(e),n(!1)}))}),[]),t?(0,i.jsx)("div",{className:d.container,children:(0,i.jsx)("div",{className:d["container-grid"],children:new Array(28).fill(void 0).map(((e,t)=>(0,i.jsx)(N,{},t)))})}):(0,i.jsx)(S,{schemas:a})}const k={id:"schema",title:"Data Schemas",sidebar_label:"Data Schemas",slug:"/schema"},_=void 0,F={id:"schema",title:"Data Schemas",description:"Introduction",source:"@site/docs/schema.mdx",sourceDirName:".",slug:"/schema",permalink:"/schema",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"schema",title:"Data Schemas",sidebar_label:"Data Schemas",slug:"/schema"},sidebar:"sidebar",previous:{title:"Reference",permalink:"/api-reference"}},E={},I=[{value:"Introduction",id:"introduction",level:2},{value:"Schema Definitions",id:"schema-definitions",level:2},{value:"JSON Schema",id:"json-schema",level:4},{value:"Schema Library",id:"schema-library",level:2},{value:"Example",id:"example",level:2}];function O(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["Verified Inc. enables securely sharing verified ",(0,i.jsx)("a",{href:"/terminology#credential",children:(0,i.jsx)(s.Z,{type:"credential"})})," data amongst network participants. While in theory this data can take any shape, a structured schema must be defined and followed for every credential type for the sake of all network participants."]}),"\n",(0,i.jsxs)(t.p,{children:["We use ",(0,i.jsx)(t.a,{href:"https://json-schema.org/",children:"JSON Schema"})," syntax for data validation purposes via a pre-compiled ",(0,i.jsx)(t.a,{href:"https://ajv.js.org/guide/why-ajv.html",children:"AJV"})," engine. This ensures our credential schemas are robust enough to encapsulate any data while still being easily described, displayed, and validated."]}),"\n",(0,i.jsx)(t.h2,{id:"schema-definitions",children:"Schema Definitions"}),"\n",(0,i.jsxs)(t.p,{children:["You can view all of the Verified Inc. defined credential schemas via ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/schema",children:"https://schema.verified.inc/schema"}),". If you want to know the schema for a particular credential type you can use that same url with the desired credential type in the path. For example, ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/schema/EmailCredential",children:"https://schema.verified.inc/schema/EmailCredential"}),", would yield the EmailCredential's schema information."]}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:["We have this API documented via our public ",(0,i.jsx)(t.a,{href:"https://api.docs.verified.inc/",children:"Postman collection"})," documentation under ",(0,i.jsx)(t.strong,{children:"Schema Resolver"}),"."]}),(0,i.jsxs)(t.p,{children:["It is possible to view the response bodies from ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/schema",children:"https://schema.verified.inc/schema"})," in the browser, but we recommend Postman, which automatically formats the JSON response for human readability."]})]}),"\n",(0,i.jsx)(t.admonition,{type:"important",children:(0,i.jsxs)(t.p,{children:["We hope to soon make it possible for you as a ",(0,i.jsx)("a",{href:"/terminology#customer",children:(0,i.jsx)(s.Z,{type:"customer"})})," to define your own credential schemas. But ",(0,i.jsx)(t.strong,{children:"currently, we Verified Inc. define all credential schemas."})," If you would like a new credential schema for your use case, please let us know and we will gladly define one for you."]})}),"\n",(0,i.jsx)(t.p,{children:'We currently support what can be referred to as "single attribute atomic credentials" and "composite credentials".'}),"\n",(0,i.jsxs)(t.p,{children:["Atomic credentials provide users a means of selective disclosure for ",(0,i.jsx)("a",{href:"/terminology#request",children:(0,i.jsx)(s.Z,{type:"request"})}),"s with optional fields."]}),"\n",(0,i.jsxs)(t.p,{children:['Composite credentials are credentials that contain multiple "Atomic Credentials". For example, the ',(0,i.jsx)(t.code,{children:"FullNameCredential"})," contains ",(0,i.jsx)(t.code,{children:"FirstNameCredential"}),", ",(0,i.jsx)(t.code,{children:"LastNameCredential"})," and ",(0,i.jsx)(t.code,{children:"MiddleNameCredential"}),". This provides a means of grouping atomic credentials with related data."]}),"\n",(0,i.jsx)(t.h4,{id:"json-schema",children:"JSON Schema"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"/jsonSchema"})," path will return the JSON schema definition, e.g. ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/jsonSchema/FirstNameCredential",children:"https://schema.verified.inc/jsonSchema/FirstNameCredential"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",metastring:'title="Example FirstNameCredential JSON Schema"',children:'{\n  "$id": "FirstNameCredential",\n  "type": "object",\n  "properties": {\n    "firstName": {\n      "description": "A person\'s first name",\n      "examples": ["John", "Mary Kate"],\n      "title": "First Name",\n      "displayFormat": "String",\n      "type": "string"\n    }\n  },\n  "required": ["firstName"]\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For composite credential schemas, the object will contain a ",(0,i.jsx)(t.code,{children:"allOf"})," property, which is an array of the atomic credential schemas:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",metastring:'title="Example FullNameCredential JSON Schema"',children:'{\n  "$id": "FullNameCredential",\n  "type": "object",\n  "allOf": [\n    {\n      "$ref": "FirstNameCredential"\n    },\n    {\n      "$ref": "LastNameCredential"\n    },\n    {\n      "$ref": "MiddleNameCredential"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["Note that each attribute has a ",(0,i.jsx)(t.code,{children:"description"})," and ",(0,i.jsx)(t.code,{children:"examples"})," to help you understand the credential's schema. If you need more detailed information, look at our open source ",(0,i.jsx)(t.a,{href:"https://github.com/VerifiedInc/schema-sdk",children:"schema-sdk"})," ",(0,i.jsx)(t.a,{href:"https://github.com/VerifiedInc/schema-sdk/blob/main/src/formats.ts",children:"formats"}),"."]})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"$ref"})," property is a JSON Pointer, which is a string containing a URI fragment identifier. In this case, it is a reference to another schema. This is how we define composite credential schemas."]})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["It's important to note that each of these credentials inside ",(0,i.jsx)(t.code,{children:"FullNameCredential"})," are single attribute atomic credentials, so you are able to request individually.\nBut if you need create or request a ",(0,i.jsx)(t.code,{children:"CityCredential"})," and a ",(0,i.jsx)(t.code,{children:"StateCredential"})," you will need to use ",(0,i.jsx)(t.code,{children:"AddressCredential"})," so data doesn't get mismatched."]})}),"\n",(0,i.jsx)(t.h2,{id:"schema-library",children:"Schema Library"}),"\n",(0,i.jsx)(t.p,{children:"Search for or select a schema, see its properties and attributes, and copy the schema JSON:"}),"\n",(0,i.jsx)(w,{}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(t.p,{children:["First, we get the JSON schemas for the ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/jsonSchema/SsnCredential",children:(0,i.jsx)(t.code,{children:"SsnCredential"})}),", ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/jsonSchema/FullNameCredential",children:(0,i.jsx)(t.code,{children:"FullNameCredential"})}),", which contains ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/jsonSchema/FirstNameCredential",children:(0,i.jsx)(t.code,{children:"FirstNameCredential"})})," and ",(0,i.jsx)(t.a,{href:"https://schema.verified.inc/jsonSchema/LastNameCredential",children:(0,i.jsx)(t.code,{children:"LastNameCredential"})})," and review their attributes' ",(0,i.jsx)(t.code,{children:"description"}),"s and ",(0,i.jsx)(t.code,{children:"examples"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Next, we construct valid credential bodies, according to the schemas:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"/*The credential data compliant with the Ssn, FullName (FirstName and LastName) Credentials schemas*/\nconst credentialsList: Credentials = [\n  {\n    type: 'SsnCredential',\n    data: {\n      ssn: '333224444',\n    },\n  },\n  {\n    type: 'FullNameCredential',\n    data: [\n      {\n        type: 'FirstNameCredential',\n        data: {\n          firstName: 'John',\n        },\n      },\n      {\n        type: 'LastNameCredential',\n        data: {\n          lastName: 'Doe',\n        },\n      },\n    ],\n  },\n];\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:'title="Example Request Body for Issuing Credentials"',children:'{\n  "credentials": credentialsList, // a list of one or more Credentials objects\n  "email": "richard.hendricks@pipedpiper.net"\n}\n\n'})})]})}function A(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(O,{...e})}):O(e)}}}]);