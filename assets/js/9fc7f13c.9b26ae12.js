"use strict";(self.webpackChunkverified_inc_docs=self.webpackChunkverified_inc_docs||[]).push([[9869],{80030:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>h,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"click-signup/api-reference/test-users","title":"Test Users","description":"Verified API Test Users","source":"@site/versioned_docs/version-2/1-click-signup/api-reference/test-users.mdx","sourceDirName":"1-click-signup/api-reference","slug":"/test-users","permalink":"/test-users","draft":false,"unlisted":false,"tags":[],"version":"2","sidebarPosition":6.1,"frontMatter":{"id":"test-users","title":"Test Users","sidebar_label":"Test Users","sidebar_position":6.1,"description":"Verified API Test Users","slug":"/test-users","toc_max_heading_level":3},"sidebar":"sidebar","previous":{"title":"Environments","permalink":"/environments"},"next":{"title":"Endpoints","permalink":"/endpoints"}}');var t=s(74848),n=s(28453),o=s(73069),d=s(5556),a=s.n(d);const l=e=>{let{data:i,description:s,children:r}=e;const n=s?`> ${s}`:null;return(0,t.jsxs)(t.Fragment,{children:[r,n&&(0,t.jsx)(o.o,{children:n}),(0,t.jsx)("table",{className:"error-table",children:(0,t.jsx)("tbody",{children:Object.entries(i).map((e=>{let[i,s]=e;return(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:(0,t.jsx)(o.o,{children:i})}),(0,t.jsx)("td",{children:(0,t.jsx)(o.o,{children:s})})]},i)}))})})]})};l.propTypes={data:a().object.isRequired,description:a().string,children:a().node};const c=l,h={id:"test-users",title:"Test Users",sidebar_label:"Test Users",sidebar_position:6.1,description:"Verified API Test Users",slug:"/test-users",toc_max_heading_level:3},u=void 0,p={},m=[{value:"Additional Test Users",id:"additional-test-users",level:2},{value:"Trigger <code>OCE011</code>",id:"trigger-oce011",level:3},{value:"Trigger <code>OCE013</code>",id:"trigger-oce013",level:3}];function x(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:["In addition to using your own phone number to receive ",(0,t.jsx)(i.a,{href:"./environments#mock-data",children:"mock data"}),", you can use our test user Richard Hendricks, who has the following phone and email ",(0,t.jsx)(i.a,{href:"./data#identifiers",children:"identifiers"}),", static verification code, and Birth Date:"]}),"\n",(0,t.jsx)(c,{data:{Phone:"+10123456789",Email:"richard@piedpiper.net","Verification Code":"111111","Birth Date":"1989-08-01"}}),"\n",(0,t.jsx)(i.admonition,{title:"Yes, You Read That Right",type:"tip",children:(0,t.jsxs)(i.p,{children:["This is Richard Hendricks from the show ",(0,t.jsx)(i.em,{children:"Silicon Valley"}),"! \ud83d\ude02"]})}),"\n",(0,t.jsx)(i.admonition,{title:"Don't Send Messages to These Identifiers",type:"warning",children:(0,t.jsx)(i.p,{children:"These are not valid phone numbers or email addresses, so sending messages to them won't work. To simulate SMS verification, for example, use the static verification code above."})}),"\n",(0,t.jsx)(i.h2,{id:"additional-test-users",children:"Additional Test Users"}),"\n",(0,t.jsx)(i.p,{children:"We also provide the following test users to help you implement specific flows and test error scenarios:"}),"\n",(0,t.jsxs)(i.h3,{id:"trigger-oce011",children:["Trigger ",(0,t.jsx)(i.code,{children:"OCE011"})]}),"\n",(0,t.jsxs)(i.p,{children:["This test user is designed to simulate a scenario where ",(0,t.jsx)(i.strong,{children:"additional information is required"})," from the user for Verified to source data for them. This allows testing and implementing error handling for the ",(0,t.jsx)(i.a,{href:"./errors#oce011",children:"OCE011"})," error."]}),"\n",(0,t.jsx)(c,{data:{Phone:"+10019999999","Birth Date":"1989-08-01","Verification Code":"111111","Error Code":"[OCE011](./errors#oce011)"}}),"\n",(0,t.jsxs)(i.admonition,{title:"Try it on our Demo",type:"tip",children:[(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Access our ",(0,t.jsx)(i.a,{href:"https://1-click.demo.verified.inc",children:"Demo"})," and select the ",(0,t.jsx)(i.em,{children:"Mock Data"})," option."]}),"\n",(0,t.jsxs)(i.li,{children:["Enter the test user's phone number: ",(0,t.jsx)(i.code,{children:'"+10019999999"'}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Enter the static Verification Code: ",(0,t.jsx)(i.code,{children:'"111111"'})]}),"\n",(0,t.jsxs)(i.li,{children:["For the Birthday field, enter: ",(0,t.jsx)(i.code,{children:'"08/01/1989"'})]}),"\n"]}),(0,t.jsx)(i.p,{children:"And you're good to go!"})]}),"\n",(0,t.jsxs)(i.h3,{id:"trigger-oce013",children:["Trigger ",(0,t.jsx)(i.code,{children:"OCE013"})]}),"\n",(0,t.jsxs)(i.p,{children:["This test user simulates a scenario where there are ",(0,t.jsx)(i.strong,{children:"no credentials found"})," for the provided identifiers (inputs). Use this to validate and implement error handling mechanisms for the ",(0,t.jsx)(i.a,{href:"./errors#oce013",children:"OCE013"})," error. This ensures your application gracefully manages situations where user data is unavailable."]}),"\n",(0,t.jsx)(c,{data:{Phone:"+10019999998","Birth Date":"1989-08-01","Verification Code":"111111","Error Code":"[OCE013](./errors#oce013)"}}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsxs)(i.p,{children:["We recommend preparing your UI to handle cases where no credentials are found by ",(0,t.jsx)(i.strong,{children:"allowing users to manually input their data"}),"."]})})]})}function f(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}}}]);