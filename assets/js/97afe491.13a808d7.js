"use strict";(self.webpackChunkunum_id=self.webpackChunkunum_id||[]).push([[582],{5162:(e,a,t)=>{t.d(a,{Z:()=>i});var n=t(7294),l=t(6010);const r="tabItem_Ymn6";function i(e){let{children:a,hidden:t,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>D});var n=t(7462),l=t(7294),r=t(6010),i=t(2466),o=t(6775),u=t(1980),s=t(7392),c=t(12);function d(e){return function(e){return l.Children.map(e,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:l}}=e;return{value:a,label:t,attributes:n,default:l}}))}function h(e){const{values:a,children:t}=e;return(0,l.useMemo)((()=>{const e=a??d(t);return function(e){const a=(0,s.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function m(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function p(e){let{queryString:a=!1,groupId:t}=e;const n=(0,o.k6)(),r=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,u._X)(r),(0,l.useCallback)((e=>{if(!r)return;const a=new URLSearchParams(n.location.search);a.set(r,e),n.replace({...n.location,search:a.toString()})}),[r,n])]}function b(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,r=h(e),[i,o]=(0,l.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:r}))),[u,s]=p({queryString:t,groupId:n}),[d,b]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,r]=(0,c.Nk)(t);return[n,(0,l.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:n}),f=(()=>{const e=u??d;return m({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),s(e),b(e)}),[s,b,r]),tabValues:r}}var f=t(2389);const v="tabList__CuJ",g="tabItem_LNqP";function k(e){let{className:a,block:t,selectedValue:o,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),h=e=>{const a=e.currentTarget,t=c.indexOf(a),n=s[t].value;n!==o&&(d(a),u(n))},m=e=>{var a;let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}null==(a=t)||a.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},a)},s.map((e=>{let{value:a,label:t,attributes:i}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===a?0:-1,"aria-selected":o===a,key:a,ref:e=>c.push(e),onKeyDown:m,onClick:h},i,{className:(0,r.Z)("tabs__item",g,null==i?void 0:i.className,{"tabs__item--active":o===a})}),t??a)})))}function w(e){let{lazy:a,children:t,selectedValue:n}=e;if(t=Array.isArray(t)?t:[t],a){const e=t.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function y(e){const a=b(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",v)},l.createElement(k,(0,n.Z)({},e,a)),l.createElement(w,(0,n.Z)({},e,a)))}function D(e){const a=(0,f.Z)();return l.createElement(y,(0,n.Z)({key:String(a)},e))}},3037:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=t(7462),l=(t(7294),t(3905));t(4866),t(5162),t(7874),t(106);const r={id:"mobile-webwallet-sdk-android",title:"Mobile WebWallet SDK - Android",sidebar_label:"Android WebWallet",slug:"/mobile-webwallet-sdk-android"},i=void 0,o={unversionedId:"mobile-webwallet-sdk-android",id:"mobile-webwallet-sdk-android",title:"Mobile WebWallet SDK - Android",description:"Docs for the iOS WebWallet SDK are here.",source:"@site/docs/mobile-webwallet-sdk-android.mdx",sourceDirName:".",slug:"/mobile-webwallet-sdk-android",permalink:"/mobile-webwallet-sdk-android",draft:!1,tags:[],version:"current",frontMatter:{id:"mobile-webwallet-sdk-android",title:"Mobile WebWallet SDK - Android",sidebar_label:"Android WebWallet",slug:"/mobile-webwallet-sdk-android"}},u={},s=[{value:"Overview",id:"overview",level:2},{value:"Minimum Requirements",id:"minimum-requirements",level:3},{value:"Installation",id:"installation",level:3},{value:"Activating a user",id:"activating-a-user",level:3},{value:"Has Matching Credentials",id:"has-matching-credentials",level:3},{value:"Verifying a user",id:"verifying-a-user",level:3}],c={toc:s};function d(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Docs for the iOS WebWallet SDK are ",(0,l.kt)("a",{parentName:"em",href:"mobile-webwallet-sdk-ios"},"here"),".")),(0,l.kt)("p",null,"This is a lightweight, fully native SDK that allows a host app to perform web wallet authentication and verification of a user. It works with both Kotlin and Java native apps."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"An example project using this SDK can be found ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/UnumID/UnumIdWebAuth-Android/"},"here"),". This serves as a useful technical reference.")),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("h3",{id:"minimum-requirements"},"Minimum Requirements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Android 6.0 (Marshmallow) and above"))),(0,l.kt)("h3",{id:"installation"},"Installation"),(0,l.kt)("p",null,"In the app level build.gradle add the following maven repository:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'\nandroid {\n    repositories {\n        maven {\n            name = "GitHubPackages"\n            url = uri("https://maven.pkg.github.com/UnumID/UnumIDWebWallet-android")\n        }\n    }\n\n   ......\n')),(0,l.kt)("p",null,"In the app level build.gradle add the reference to the SDK"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'implementation "id.unum:verified-android:(insert latest version)"\n')),(0,l.kt)("p",null,"For the most current version, visit ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/UnumID/UnumIDWebWallet-android/packages/1757162"},"here")),(0,l.kt)("h3",{id:"activating-a-user"},"Activating a user"),(0,l.kt)("p",null,"When a host application would like to activate a user with the UnumID Web Wallet Verification SDK, then the 'launchActivate' method will be called. An ",(0,l.kt)("inlineCode",{parentName:"p"},"IssueCredentialsRequest")," object will also need to be provided to the endpoint. This will let the SDK know what credentials should be assigned to the user being activated."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"/**\n     * Method called to launch the activate dialog flow.\n     * @param issueCredentialsRequest - credential request\n     * @param brand - The name of the client brand\n     * @param callback - callback to be called once the dialog is closed\n     */\n    fun launchActivate(\n        issueCredentialsRequest: IssueCredentialsRequest,\n        brand: String,\n        callback: UnumDialogComplete\n    )\n")),(0,l.kt)("h3",{id:"has-matching-credentials"},"Has Matching Credentials"),(0,l.kt)("p",null,"The host application can check to see if a user has existing credentials already associated with the UnumID SDK. To do this, call the ",(0,l.kt)("inlineCode",{parentName:"p"},"hasMatchingCredentials")," function. If there are matching credentials, the response will contain a url that can then be passed to the ",(0,l.kt)("inlineCode",{parentName:"p"},"launchVerify")," function."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"/**\n     * Method called to check if there are matching credentials for the given email and phone.\n     * @param brand - The name of the client brand\n     * @param showDialog - if a dialog should be shown to the user\n     * @param callback - callback results\n     * @param request - api request body\n     */\n    fun hasMatchingCredentials(\n        brand: String,\n        showDialog: Boolean,\n        callback: UnumDialogComplete,\n        request: HasMatchingCredentialsRequest,\n    )\n")),(0,l.kt)("h3",{id:"verifying-a-user"},"Verifying a user"),(0,l.kt)("p",null,"When the host application would like to verify a user, then the following function can be called."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"/**\n     * Method called to launch the Verification View.\n     * @param url - url to be loaded\n     * @param brand - The name of the client brand\n     * @param callback - callback to be called once the dialog is closed\n     * @param showDialog - whether to show the preliminary dialog or not\n     */\n    fun launchVerify(\n        url: String,\n        brand: String,\n        callback: UnumDialogComplete,\n        showDialog: Boolean = false // default value\n    )\n")))}d.isMDXComponent=!0}}]);