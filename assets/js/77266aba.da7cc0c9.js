"use strict";(self.webpackChunkverified_inc=self.webpackChunkverified_inc||[]).push([[6563,6284,2019,6602],{2898:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>j,frontMatter:()=>c,metadata:()=>h,toc:()=>p});var i=t(5893),s=t(1151),r=(t(7874),t(106)),a=t(9970),d=t(3247),l=t(9474);const c={id:"api-reference",title:"API Reference",sidebar_label:"Reference",slug:"/api-reference"},o=void 0,h={id:"api-reference",title:"API Reference",description:"See also our Postman docs.",source:"@site/docs/api-reference.mdx",sourceDirName:".",slug:"/api-reference",permalink:"/api-reference",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"api-reference",title:"API Reference",sidebar_label:"Reference",slug:"/api-reference"},sidebar:"sidebar",previous:{title:"Issue to Earn",permalink:"/demo-issue-to-earn"},next:{title:"Data Schemas",permalink:"/schema"}},u={},p=[{value:"Authentication",id:"authentication",level:3},{value:"Environments",id:"environments",level:3},{value:"Development",id:"development",level:3},{value:"Functionality",id:"functionality",level:2},{value:"1-Click",id:"1-click",level:3},{value:"Request Body",id:"request-body",level:4},{value:"Response Body",id:"response-body",level:4},{value:"Check User Credentials",id:"check-user-credentials",level:3},{value:"Request Body",id:"request-body-1",level:4},{value:"Response Body",id:"response-body-1",level:4},{value:"Get Shared Credentials",id:"get-shared-credentials",level:3},{value:"Response Body",id:"response-body-2",level:4},{value:"Issue Credentials",id:"issue-credentials",level:3},{value:"Request Body",id:"request-body-2",level:4},{value:"Response Body",id:"response-body-3",level:4},{value:"Patch Credential",id:"patch-credential",level:3},{value:"Request Body",id:"request-body-3",level:4},{value:"Response Body",id:"response-body-4",level:4},{value:"Patch All User Credentials",id:"patch-all-user-credentials",level:3},{value:"Request Body",id:"request-body-4",level:4},{value:"Response Body",id:"response-body-5",level:4},{value:"Get Credential",id:"get-credential",level:3},{value:"Response Body",id:"response-body-6",level:4},{value:"Get All User Credentials",id:"get-all-user-credentials",level:3},{value:"Response Body",id:"response-body-7",level:4},{value:"Get Partner Credential Requests",id:"get-partner-credential-requests",level:3},{value:"Response Body",id:"response-body-8",level:4}];function x(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["See also our ",(0,i.jsx)(n.a,{href:"https://api.docs.verified.inc/",children:"Postman docs"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(n.p,{children:["Every request detailed below requires an Verified Inc. API key as an ",(0,i.jsx)(n.code,{children:"Authorization"})," header value."]}),"\n",(0,i.jsx)(l.default,{}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"API keys are sensitive, so please only use them in a secure backend service environment."})," This means that ideally your clients will communicate with your own backend service, which will then call the Verified Inc. API. Your clients should never have direct access to your Verified Inc. API key."]})}),"\n",(0,i.jsx)(n.h3,{id:"environments",children:"Environments"}),"\n",(0,i.jsxs)(n.p,{children:["We have two environments. Please do all integration against the ",(0,i.jsx)(n.strong,{children:"sandbox"})," environment."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Environment"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Base URL"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Wallet URL"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Sandbox"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"https://core-api.sandbox-verifiedinc.com"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"https://wallet.sandbox-verifiedinc.com"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Production"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"https://core-api.verified.inc"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"https://wallet.verified.inc"})})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The sandbox domain is ",(0,i.jsxs)("code",{children:["sandbox-verifiedinc",(0,i.jsx)("b",{children:".com"})]})," but the production domain is ",(0,i.jsxs)("code",{children:["verified",(0,i.jsx)("b",{children:".inc"})]}),". This is purely because ",(0,i.jsx)(n.code,{children:".inc"})," domains are quite expensive!"]})}),"\n",(0,i.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,i.jsx)(n.p,{children:"While developing your integration you can use a dummy user account if you would like."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"test",children:"email: richard@piedpiper.net || richard.hendricks@verified.inc\nphone: +10123456789 || +550123456789\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By using these test identifiers you can authenticate to the wallet using a static OTP value of ",(0,i.jsx)(n.code,{children:"111111"}),", allowing you to test the full flow of the integration more easily. We recommend using a proper test email or phone to recieve actual verification messages during the final stages of development."]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"Credentials issued to the test user will be deleted every day at 05:00 UTC."})}),"\n",(0,i.jsx)(n.h2,{id:"functionality",children:"Functionality"}),"\n",(0,i.jsxs)(n.p,{children:["Our API allows your brand to participate in the Verified Network through solutions like ",(0,i.jsx)(n.a,{href:"/",children:"1-Click Signup"})," and ",(0,i.jsx)(n.a,{href:"/issue-to-earn",children:"Issue to Earn"}),". You can use the API to check if ",(0,i.jsx)(r.Z,{type:"user",children:"users"})," have credentials of interest, create ",(0,i.jsx)(r.Z,{type:"request",children:"requests"})," for and retrieve user data in the form of ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"}),", issue ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"})," of user data, and update previously issued credential statuses (e.g. to invalidate a credential)."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"1-click",children:"1-Click"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Begin a 1-Click Signup flow, so a ",(0,i.jsx)(r.Z,{type:"user",children:"user"})," can easily share their verified ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"POST"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/1-click"})]}),"\n",(0,i.jsx)(n.p,{children:"You need to provide:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"User's phone"}),"\n",(0,i.jsx)(n.li,{children:"(Optional) User's email."}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Verification option(s). ",(0,i.jsx)(n.em,{children:"Controls the SMS verification messaging."})]}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Content object of request page options. ",(0,i.jsx)(n.em,{children:"To allow for minor messaging adjustments to the Wallet request page from which the user provides consent to share data."})]}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Credential request(s). ",(0,i.jsx)(n.em,{children:"If you would like to update from the default credential requests."})]}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Redirect URL. ",(0,i.jsx)(n.em,{children:"If you would like to redirect the user to a different URL than the one provided in your settings."})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["A credential requests encodes which ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"})," you're asking the user to share with your ",(0,i.jsx)(r.Z,{type:"brand"}),". It's a list of one or more ",(0,i.jsx)(n.a,{href:"https://docs.verified.inc/core-types/interfaces/CredentialRequestDto.html",children:(0,i.jsx)(n.code,{children:"CredentialRequest"})})," objects."]}),"\n",(0,i.jsx)(a.default,{}),"\n",(0,i.jsx)(n.p,{children:"The endpoint comes with a default credential requests configuration shown below which should be suffice for most customers."}),"\n",(0,i.jsx)(d.default,{}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["This endpoint performs a similar role to ",(0,i.jsx)(n.a,{href:"#check-user-credentials",children:"/hasMatchingCredentials"})," but with a few key differences:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Can only be used with a user's phone number"}),"\n",(0,i.jsx)(n.li,{children:"Triggers an SMS verification message to the user that Verified Inc. sends"}),"\n",(0,i.jsx)(n.li,{children:"Much greater chance of success getting user data than the standard acceptance flow because data is pulled on demand"}),"\n"]})]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["The same API key necessary to call ",(0,i.jsx)(n.a,{href:"/api-overview#1-click-onboarding",children:"/1-click"})," grants you, and only, you access to the encrypted credential data documented in ",(0,i.jsx)(n.a,{href:"#get-shared-credentials",children:"Get Shared Credentials"}),". Please keep this key secure."]})}),"\n",(0,i.jsx)(n.h4,{id:"request-body",children:"Request Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="1-Click Request"',children:"{\n  phone: string, // user's phone number in E.164 format\n  email?: string, // user's email address; optional\n  verificationOptions?: 'only_link' | 'only_code' | 'both_link_and_code' // Optional: controls the SMS verification messaging. Default is 'only_link'.\n  content?: {\n    title?: 'Signup' | 'Verify' | 'Apply', // Optional: title of the request page. Default is 'Signup'\n    description?: string, // Optional: description displayed under the consent page header. Default is 'Make sure everything is correct:'\n  }\n  credentialRequests?: CredentialRequest[], // Optional: a list of one or more CredentialRequest objects. Encodes which credentials are being asked for\n  redirectUrl?: string // Optional: redirect url to redirect user to after the user has completed the 1-click flow. Default is the redirect url provided in your settings.\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"response-body",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="1-Click Response"',children:'{\n  "url": string // Verified Inc. Web Wallet url to redirect user to for credential request handling. It will redirect back to your client. Only present if match is true.\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"url"})," from the response ought to then be enriched with a ",(0,i.jsx)(n.code,{children:"redirectUrl"})," query param that will take the next step in your target service's user onboarding webpage. ",(0,i.jsxs)(n.em,{children:["More information on this can be found in the ",(0,i.jsx)(n.a,{href:"/1-click-guide",children:"1-Click Guide"}),"."]})]}),"\n",(0,i.jsx)(n.h3,{id:"check-user-credentials",children:"Check User Credentials"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Check if a user has matching ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"}),". If so, a ",(0,i.jsx)(r.Z,{type:"request"})," is created to get the ",(0,i.jsx)(r.Z,{type:"user",children:"user"}),"'s consent to share the data."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"POST"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/hasMatchingCredentials"})]}),"\n",(0,i.jsx)(n.p,{children:"You need to provide:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"User's email or phone"}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Credential request(s). ",(0,i.jsx)(n.em,{children:"Required if Partner UUID is not provided."})]}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Partner UUID. ",(0,i.jsxs)(n.em,{children:["More information on the partner UUID use case can be found in the ",(0,i.jsx)(n.a,{href:"/issuance-guide#already-issued-credentials",children:"Issuance Guide"}),"."]})]}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) List of the sub-credentials that make up the credential. ",(0,i.jsx)(n.em,{children:"If not provided, all sub-credentials will be returned."})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["A credential requests encodes which ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"})," you're asking the user to share with your ",(0,i.jsx)(r.Z,{type:"brand"}),". It's a list of one or more ",(0,i.jsx)(n.a,{href:"https://docs.verified.inc/core-types/interfaces/CredentialRequestDto.html",children:(0,i.jsx)(n.code,{children:"CredentialRequest"})})," objects."]}),"\n",(0,i.jsx)(a.default,{}),"\n",(0,i.jsxs)(n.p,{children:["If you list multiple ",(0,i.jsx)(r.Z,{type:"issuer",children:"issuers"}),", the user can include a credential issued by ",(0,i.jsx)(n.em,{children:"any one"})," of those listed. If ",(0,i.jsx)(n.code,{children:"issuers"})," is left empty the user can include a credential with matching type issued by ",(0,i.jsx)(n.em,{children:"any"})," issuer."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The Credential ",(0,i.jsx)(r.Z,{type:"request",children:"requests"})," attribute is required if a Partner UUID is ",(0,i.jsx)(n.strong,{children:"not"})," provided. If Partner UUID is provided, the Credential requests attribute is not used. Instead, a pre-defined set of accepting partner's credentials requests are used.\n",(0,i.jsxs)(n.em,{children:["More information on the partner UUID use case can be found in the ",(0,i.jsx)(n.a,{href:"/issuance-guide#already-issued-credentials",children:"Issuance Guide"}),"."]})]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)("b",{children:"mandatory"})," field are missing, then the credential will be treated as optional."]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The Credential ",(0,i.jsx)(r.Z,{type:"request",children:"requests"})," objects can contain a ",(0,i.jsx)(n.code,{children:"children"})," attribute. This attribute is used to specify the sub-credentials that make up the credential. If not provided, all sub-credentials will be returned.\n(eg: If you request a ",(0,i.jsx)(r.Z,{type:"credential",children:"credential"})," of type ",(0,i.jsx)(n.code,{children:"AddressCredential"})," and you only want the ",(0,i.jsx)(n.code,{children:"city"})," and ",(0,i.jsx)(n.code,{children:"state"})," sub-credentials, you can specify that in the ",(0,i.jsx)(n.code,{children:"children"})," attribute.)"]})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["The same ApiKey necessary to call /hasMatchingCredentials grants you and only you access to the encrypted credential data documented in ",(0,i.jsx)(n.a,{href:"#get-shared-credentials",children:"Get Shared Credentials"}),". Please keep this key secure."]})}),"\n",(0,i.jsx)(n.h4,{id:"request-body-1",children:"Request Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{\n  email?: string, // user's email address; optional if phone is provided\n  phone?: string, // user's phone number; optional if email is provided\n  credentialRequests: CredentialRequest[], // a list of one or more CredentialRequest objects. Encodes which credentials are being asked for; not used if partnerUuid is provided\n  partnerUuid?: string, // partner's uuid; optional\n  description?: string // A description displayed in the consent page header. If no description is provided, a default value will be displayed.\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"response-body-1",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="HasMatchingCredentials"',children:'{\n  "match": boolean, // indicates whether the user has matching credentials\n  "url": string // Verified Inc. Web Wallet url to redirect user to for credential request handling. It will redirect back to your client. Only present if match is true.\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"url"})," from the response ought to then be enriched with a ",(0,i.jsx)(n.code,{children:"redirectUrl"})," query param that will take the next step in your target service's user onboarding webpage. ",(0,i.jsxs)(n.em,{children:["More information on this can be found in the ",(0,i.jsx)(n.a,{href:"/acceptance-guide",children:"Acceptance Guide"}),"."]})]}),"\n",(0,i.jsxs)(n.admonition,{title:"Example Credential Request",type:"info",children:[(0,i.jsxs)(n.p,{children:["For example, if you want to check if a user has credentials of type ",(0,i.jsx)(n.code,{children:"SsnCredential"}),", ",(0,i.jsx)(n.code,{children:"FullNameCredential"})," and ",(0,i.jsx)(n.code,{children:"AddressCredential"})," issued by any issuer you would send the following request:"]}),(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Request Body"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "email": "richard@piedpiper.net",\n  "credentialRequests": [\n    {\n      "type": "SsnCredential",\n      "issuers": [],\n      "mandatory": "yes"\n    },\n    {\n      "type": "FullNameCredential",\n      "issuers": [],\n      "mandatory": "yes"\n    },\n    {\n      "type": "PhoneCredential",\n      "issuers": [],\n      "mandatory": "if_available",\n      "allowUserInput": true\n    },\n    {\n      "type": "AddressCredential",\n      "issuers": [],\n      "children": [\n        {\n          "type": "CityCredential",\n          "issuers": [],\n          "mandatory": "if_available"\n        },\n        {\n          "type": "StateCredential",\n          "issuers": [],\n          "mandatory": "yes"\n        },\n        {\n          "type": "CountryCredential",\n          "issuers": [],\n          "mandatory": "yes"\n        },\n        {\n          "type": "ZipCodeCredential",\n          "issuers": []\n        }\n      ]\n    }\n  ]\n}\n'})})})]}),(0,i.jsx)(n.p,{children:"Let's break this down to understand what is happening here:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SsnCredential"}),' is a "',(0,i.jsx)(n.a,{href:"/schema#schema-definitions",children:"single attribute atomic credential"}),'" and therefore does not have any sub-credentials. Because it is marked as ',(0,i.jsx)(n.code,{children:"mandatory"}),", it only matches if the user has a credential."]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="SnnCredential"',children:'{\n  "type": "SsnCredential",\n  "issuers": [],\n  "mandatory": "yes"\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FullNameCredential"}),' is a "',(0,i.jsx)(n.a,{href:"/schema#schema-definitions",children:"composite credential"}),'" and therefore has ',(0,i.jsx)(n.em,{children:"2 sub-credentials"}),"\xb9: ",(0,i.jsx)(n.code,{children:"FirstNameCredential"}),", ",(0,i.jsx)(n.code,{children:"LastNameCredential"}),". Because it is marked as ",(0,i.jsx)(n.code,{children:"mandatory"}),", and it has no ",(0,i.jsx)(n.code,{children:"children"})," attribute, it only matches if the user has a credential with all sub-credentials."]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="FullNameCredential"',children:'{\n  "type": "FullNameCredential",\n  "issuers": [],\n  "mandatory": "yes"\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PhoneCredential"}),' is a "',(0,i.jsx)(n.a,{href:"/schema#schema-definitions",children:"single attribute atomic credential"}),'" and therefore does not have any sub-credentials. Because we set a ',(0,i.jsx)(n.code,{children:"allowUserInput"})," attribute of ",(0,i.jsx)(n.code,{children:"true"}),", the user will be given an opportunity to enter a new value if they choose to. Note that this have not relation with ",(0,i.jsx)(n.code,{children:"mandatory"}),' field, it just accepts and validates the user input data."']}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="PhoneCredential"',children:'{\n  "type": "PhoneCredential",\n  "issuers": [],\n  "mandatory": "if_available",\n  "allowUserInput": true\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AddressCredential"})," credential is made up of 6 sub-credentials: ",(0,i.jsx)(n.code,{children:"Line1Credential"}),", ",(0,i.jsx)(n.code,{children:"Line2Credential"}),", ",(0,i.jsx)(n.code,{children:"CityCredential"}),", ",(0,i.jsx)(n.code,{children:"StateCredential"}),", ",(0,i.jsx)(n.code,{children:"CountryCredential"})," and ",(0,i.jsx)(n.code,{children:"ZipCodeCredential"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["But because we specified a ",(0,i.jsx)(n.code,{children:"children"})," attribute, we are only asking for the ",(0,i.jsx)(n.code,{children:"CityCredential"}),", ",(0,i.jsx)(n.code,{children:"StateCredential"}),", ",(0,i.jsx)(n.code,{children:"CountryCredential"})," and ",(0,i.jsx)(n.code,{children:"ZipCodeCredential"})," sub-credentials. So ",(0,i.jsx)(n.code,{children:"Line1Credential"})," and ",(0,i.jsx)(n.code,{children:"Line2Credential"})," are ignored."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="AddressCredential"',children:'{\n  "type": "AddressCredential",\n  "issuers": [],\n  "children": [\n    {\n      "type": "CityCredential",\n      "issuers": [],\n      "mandatory": "if_available"\n    },\n    {\n      "type": "StateCredential",\n      "issuers": [],\n      "mandatory": "yes"\n    },\n    {\n      "type": "CountryCredential",\n      "issuers": [],\n      "mandatory": "yes"\n    },\n    {\n      "type": "ZipCodeCredential",\n      "issuers": []\n    }\n  ]\n}\n'})}),"\n"]}),"\n"]}),(0,i.jsxs)(n.p,{children:["The user will be asked to share the ",(0,i.jsx)(n.code,{children:"CityCredential"})," if available (this means if the user has a credential of type ",(0,i.jsx)(n.code,{children:"CityCredential"})," it will be mandatory, but if the user does not have a credential of type ",(0,i.jsx)(n.code,{children:"CityCredential"})," the user will still be able to share the ",(0,i.jsx)(n.code,{children:"AddressCredential"})," credential)."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"StateCredential"})," and ",(0,i.jsx)(n.code,{children:"CountryCredential"})," are mandatory and therefore the user must have a credential of each type to match."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ZipCodeCredential"})," is optional and therefore the user may or may not have a credential of type to match."]})]}),"\n",(0,i.jsx)(n.h3,{id:"get-shared-credentials",children:"Get Shared Credentials"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Get verified ",(0,i.jsx)(r.Z,{type:"credential"})," data shared by a ",(0,i.jsx)(r.Z,{type:"user"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"GET"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/sharedCredentials/{sharedCredentialsUuid}"})]}),"\n",(0,i.jsxs)(n.p,{children:["When a ",(0,i.jsx)(r.Z,{type:"user"})," responds to a ",(0,i.jsx)(r.Z,{type:"request"})," the verified data is sent and stored securely awaiting retrieval. Additionally, as mentioned above in ",(0,i.jsx)(n.a,{href:"#check-user-credentials",children:"Check User Credentials"}),", upon the user responding to the request, the user will be redirected back to your client with a ",(0,i.jsx)(n.code,{children:"sharedCredentialsUuid"})," as a query parameter."]}),"\n",(0,i.jsxs)(n.p,{children:["This endpoint allows you to retrieve the shared ",(0,i.jsx)(r.Z,{type:"credential",children:"credentials"})," data related to the ",(0,i.jsx)(r.Z,{type:"request"})," created as a result of a successful match from the ",(0,i.jsx)(n.code,{children:"/hasMatchingCredentials"})," endpoint."]}),"\n",(0,i.jsx)(n.p,{children:"You need to provide:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the ",(0,i.jsx)(n.code,{children:"sharedCredentialsUuid"})," that was returned in the query param after redirecting the user to the ",(0,i.jsx)(n.code,{children:"redirectUrl"})," attribute from the ",(0,i.jsx)(n.code,{children:"/hasMatchingCredentials"}),"response"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Your brand's access to shared credentials is deleted after 5 minutes of the initial credential data retrieval."})}),"\n",(0,i.jsx)(n.p,{children:"The response body consists of Credential objects with the plaintext user data."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Credential"',children:'{\n    "id": string, // credential id\n    "type": string, // credential type\n    "issuer": string, // credential issuer brandId\n    "issuanceDate": number, // when credential was created as a milliseconds since epoch unix timestamp\n    "expirationDate"?: number, // when credentials expires as a milliseconds since epoch unix timestamp\n    "data": Map<string, any> | Credential[] // credential data map/array that matches the credential type\'s JSON Schema definition\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"response-body-2",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="SharedCredentials"',children:'{\n  "uuid": string, // the uuid from the query parameter of the redirect back to your client; identifies the collection of credentials shared by the user\n  "credentials": Credential[], // a list of one or more Credential objects\n  "email"?: string, // the user\'s email from the input to /hasMatchingCredentials; only present if email was provided\n  "phone"?: string // the user\'s phone from the input to /hasMatchingCredentials; only present if phone was provided\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["To facilitate extracting the credential data we recommend leveraging the Schema Resolver to get the ",(0,i.jsx)(n.a,{href:"/schema",children:"schema"})," of the credential types. Because Credential schemas are immutable they can then be cached and referenced when retrieving the credential data."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"issue-credentials",children:"Issue Credentials"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Issue ",(0,i.jsx)(r.Z,{type:"credential"}),"s to a ",(0,i.jsx)(r.Z,{type:"user"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"POST"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/credentials"})]}),"\n",(0,i.jsx)(n.p,{children:"You need to provide:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Credentials data array"}),"\n",(0,i.jsx)(n.li,{children:"Either a phone and/or email attribute"}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Partner UUID. ",(0,i.jsxs)(n.em,{children:["More information on the partner UUID use case can be found in the ",(0,i.jsx)(n.a,{href:"/issuance-guide#partner-issuance",children:"Issuance Guide"}),"."]})]}),"\n",(0,i.jsxs)(n.li,{children:["(Optional) Tracking Identifier for credential usage attribute. ",(0,i.jsxs)(n.em,{children:["More information on the tracking identifier use case can be found in the ",(0,i.jsx)(n.a,{href:"/issuance-guide#tracking-identifier",children:"Issuance Guide"}),"."]})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Data about the user, must comply with our credential ",(0,i.jsx)(n.a,{href:"/schema",children:"schema"})," definitions."]}),"\n",(0,i.jsx)(n.p,{children:"An example Credentials object is below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Credentials"',children:'{\n  "type": string, // credential type\n  "data": Map<string, any> | Credentials[], // credential data map/array that matches the credential type\'s JSON Schema definition\n  "id"?: string, // credential id - uuid formatted; optional. If not provided, a random uuid will be generated\n  "expirationDate?": number // when the credential expires as a milliseconds since unix epoch; optional\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["While not required, we recommend providing a unique ",(0,i.jsx)(n.code,{children:"id"})," following ",(0,i.jsx)(n.code,{children:"uuid"})," ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier",children:"format"})," for each credential. This allows for idempotent credential issuance - meaning if a duplicate ",(0,i.jsx)(n.code,{children:"id"})," value is seen another credential will not be created. Expect a HTTP status code of ",(0,i.jsx)(n.code,{children:"409"})," if this is the case. If you do not provide an ",(0,i.jsx)(n.code,{children:"id"}),", a random uuid will be generated for you."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["An expiration date is not the only control on whether a credential is valid. You can also change the credential's status at any time, for example to revoke it. See ",(0,i.jsx)(n.a,{href:"#patch-credentials",children:"Patch Credentials"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Credential data is stored securely via a data privacy vault that encrypts and tokenizes the data. The data is only retrieved and decrypted for the brand that the ",(0,i.jsx)(r.Z,{type:"user"})," agrees to share with."]})}),"\n",(0,i.jsxs)(n.admonition,{title:"Composite Credentials",type:"info",children:[(0,i.jsxs)(n.p,{children:["Composite credentials are credentials that are made up of other credentials. For example, a ",(0,i.jsx)(n.code,{children:"FullNameCredential"})," is made up of ",(0,i.jsx)(n.code,{children:"FirstNameCredential"}),", ",(0,i.jsx)(n.code,{children:"MiddleNameCredential"}),"(optional), and ",(0,i.jsx)(n.code,{children:"LastNameCredential"}),". When issuing a composite credential, you must provide the child credentials as well."]}),(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="Composite Credential"',children:'{\n  "type": "FullNameCredential",\n  // based on the properties attribute of the schema\n  // highlight-start\n  // note that the data is an array of objects, not a single object\n  "data": [\n    {\n      "type": "FirstNameCredential",\n      "data": {\n        "firstName": "Richard"\n      }\n    },\n    {\n      "type": "LastNameCredential",\n      "data": {\n        "lastName": "Hendricks"\n      }\n    }\n  ]\n  // highlight-end\n}\n'})})]}),(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/schema",children:"Data Schemas"})," for more information."]})]}),"\n",(0,i.jsx)(n.h4,{id:"request-body-2",children:"Request Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'{\n  "credentials": Credentials[], // a list of one or more Credentials objects\n  "email"?: string, // user\'s email address; optional if phone is provided\n  "phone"?: string // user\'s phone number in E.164 format; optional if email is provided\n  "trackingId"?: string // user tracking identifier\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"response-body-3",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="CredentialsDto"',children:'{\n  "email": string, // user\'s email address if provided\n  "phone": phone, // user\'s phone number if provided\n  "trackingId"?: string // user tracking identifier if provided\n  "credentials": [{\n    "id": string, // credential id\n    "type": string, // credential type\n    "data": Map<string, any> | Credentials[], // credential data map/array that matches your provided data and the credential type\'s JSON Schema definition\n    "issuanceDate": string, // when credential was created as a milliseconds since epoch unix timestamp\n    "expirationDate?": string, // when the credential expires as a milliseconds since unix epoch; optional\n    "status": \'valid\' | \'revoked\' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate\n  }],\n  "url"?: string // Only present if partnerUuid was provided and conditions are met. See the Issuance Guide for more information.\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The issued credential contains an ",(0,i.jsx)(n.code,{children:"id"})," that you should store. You'll need this, for example, if you ever want to revoke the credential. ",(0,i.jsxs)(n.strong,{children:["We recommend storing the entire credential, indexed on the credential ",(0,i.jsx)(n.code,{children:"id"}),"."]})," However, it is also an acceptable to store credential ",(0,i.jsx)(n.code,{children:"id"}),"s associated with a user and use the ",(0,i.jsx)(n.a,{href:"/api-overview#get-credential",children:"Get Credential"})," or ",(0,i.jsx)(n.a,{href:"/api-overview#get-all-user-credentials",children:"Get All User Credentials"})," endpoint to retrieve the full credential."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"patch-credential",children:"Patch Credential"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Patch a previously issued ",(0,i.jsx)(r.Z,{type:"credential"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"PATCH"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/credentials/{id}"})]}),"\n",(0,i.jsx)(n.p,{children:"You can optionally provide any of the following in the request body:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"(Optional) new credential data"}),"\n",(0,i.jsx)(n.li,{children:"(Optional) new credential expiration date"}),"\n",(0,i.jsx)(n.li,{children:"(Optional) new credential status"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Credential data must comply with our credential ",(0,i.jsx)(n.a,{href:"/schema",children:"schema"})," definitions."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"If a credential is expired but the status is 'valid' it is an unusable credential. Likewise, if the credential as not expired but the status is 'revoked', it is also not usable credential."})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Credential data is stored securely via a data privacy vault that encrypts and tokenizes the data. The data is only retrieved and decrypted for the brand that the ",(0,i.jsx)(r.Z,{type:"user"})," agrees to share with."]})}),"\n",(0,i.jsx)(n.h4,{id:"request-body-3",children:"Request Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'{\n  "data": Map<string, any> | Credentials[], // credential data map/array that matches the credential type\'s JSON schema definition\n  "expirationDate?": number // when the credentials expires as a milliseconds since epoch unix timestamp; optional\n  "status": \'valid\' | \'revoked\' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"response-body-4",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="CredentialDto"',children:'{\n  "id": string, // credential id\n  "type": string, // credential type\n  "data": Map<string, any> | Credentials[], // credential data map/array that matches your provided data and the credential type\'s JSON Schema definition\n  "issuanceDate": string, // when credential was created as a milliseconds since epoch unix timestamp\n  "expirationDate?": number, // when the credential expires as a milliseconds since epoch unix timestamp; optional\n  "status": \'valid\' | \'revoked\' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate.\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The resultant credential ",(0,i.jsx)(n.code,{children:"id"})," remains the same, so after a 200 HTTP response code is received, nothing further needs to be updated on your end."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"patch-all-user-credentials",children:"Patch All User Credentials"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Patch all previously issued ",(0,i.jsx)(r.Z,{type:"credentials"})," by your brand to a user."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"PATCH"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/userCredentials/{userIdentifier}"})]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(r.Z,{type:"userIdentifier"})," is either a phone number or email address associated with a user."]}),"\n",(0,i.jsxs)(n.p,{children:["The only credential value that can by updated in this manner is ",(0,i.jsx)(n.code,{children:"status"}),". A credential status must be in the request body."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This endpoint all modifies credentials issued to the user by your brand."})}),"\n",(0,i.jsx)(n.h4,{id:"request-body-4",children:"Request Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"{\n  \"status\": 'valid' | 'revoked' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"response-body-5",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="UserCredentialsDto"',children:'{\n  "credentials": {\n    "id": string, // credential id\n    "type": string, // credential type\n    "data": Map<string, any> | Credentials[], // credential data map/array that matches your provided data and the credential type\'s JSON Schema definition\n    "issuanceDate": string, // when credential was created as a milliseconds since epoch unix timestamp\n    "expirationDate?": number, // when the credential expires as a milliseconds since epoch unix timestamp; optional\n    "status": \'valid\' | \'revoked\' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate.\n  }[]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The response body contains a list of all credentials that were modified on the ",(0,i.jsx)(n.code,{children:"credentials"})," key."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"get-credential",children:"Get Credential"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Get a previously issued ",(0,i.jsx)(r.Z,{type:"credential"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"GET"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/credentials/{id}"})]}),"\n",(0,i.jsxs)(n.p,{children:["This endpoint returns a credential (issued by your brand) via the credential ",(0,i.jsx)(n.code,{children:"id"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"response-body-6",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="CredentialDto"',children:'{\n  "id": string, // credential id\n  "type": string, // credential type\n  "data": Map<string, any> | Credentials[], // credential data map/array that matches your provided data and the credential type\'s JSON Schema definition\n  "issuanceDate": string, // when credential was created as a milliseconds since epoch unix timestamp\n  "expirationDate?": number, // when the credential expires as a milliseconds since epoch unix timestamp; optional\n  "status": \'valid\' | \'revoked\' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate.\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"get-all-user-credentials",children:"Get All User Credentials"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Get all previously issued ",(0,i.jsx)(r.Z,{type:"credentials"})," by your brand to a user."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"GET"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/userCredentials/{userIdentifier}"})]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(r.Z,{type:"userIdentifier"})," is either a phone number or email address associated with a user."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This endpoint all modifies credentials issued to the user by your brand."})}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsxs)(n.p,{children:["It should be clear that this endpoint should not be used in place of ",(0,i.jsx)(n.a,{href:"/api-overview/#check-user-credentials",children:(0,i.jsx)(n.code,{children:"/hasMatchingCredentials"})}),", which can check user credentials across many issuers but does not return the credentials' values."]}),(0,i.jsx)(n.p,{children:"This endpoint is simply a nice to have for an issuer to see all credentials they have issued to a user."})]}),"\n",(0,i.jsx)(n.h4,{id:"response-body-7",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="UserCredentialsDto"',children:'{\n  "credentials": {\n    "id": string, // credential id\n    "type": string, // credential type\n    "data": Map<string, any> | Credentials[], // credential data map/array that matches your provided data and the credential type\'s JSON Schema definition\n    "issuanceDate": string, // when credential was created as a milliseconds since epoch unix timestamp\n    "expirationDate?": number, // when the credential expires as a milliseconds since epoch unix timestamp; optional\n    "status": \'valid\' | \'revoked\' // an enum to denote whether the credential is valid (all credentials are valid when first issued) \u2014 note that this is independent of the expirationDate.\n  }[]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The response body contains a list of all credentials on the ",(0,i.jsx)(n.code,{children:"credentials"})," key."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"get-partner-credential-requests",children:"Get Partner Credential Requests"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Get the partner's pre-defined ",(0,i.jsx)(r.Z,{type:"request",children:"credential requests"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"GET"})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Path"}),": ",(0,i.jsx)(n.code,{children:"/credentialRequests/{partnerUuid}"})]}),"\n",(0,i.jsx)(n.p,{children:"This endpoint returns a list of credential requests that the partner has defined for their brand."}),"\n",(0,i.jsx)(n.h4,{id:"response-body-8",children:"Response Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="CredentialRequestsResponse"',children:'{\n  "credentialRequests": CredentialRequest[]\n}\n'})}),"\n",(0,i.jsx)(a.default,{}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This endpoint is helpful when developing the partner issuance flow. More information about partner issuance can be found in the ",(0,i.jsx)(n.a,{href:"/issuance-guide#partner-issuance",children:"Issuance Guide"}),"."]})}),"\n",(0,i.jsx)(n.hr,{})]})}function j(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},3247:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=t(5893),s=t(1151);const r={},a=void 0,d={id:"reusables/click-default-credential-request",title:"click-default-credential-request",description:"Default 1-Click Credential Requests",source:"@site/docs/reusables/1-click-default-credential-request.mdx",sourceDirName:"reusables",slug:"/reusables/click-default-credential-request",permalink:"/reusables/click-default-credential-request",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{}},l={},c=[];function o(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Default 1-Click Credential Requests"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'[\n  {\n    "type": "FullNameCredential",\n    "children": [\n      {\n        "type": "FirstNameCredential"\n      },\n      {\n        "type": "MiddleNameCredential"\n      },\n      {\n        "type": "LastNameCredential"\n      }\n    ],\n    "allowUserInput": true\n  },\n  {\n    "type": "EmailCredential",\n    "allowUserInput": true\n  },\n  {\n    "type": "PhoneCredential"\n  },\n  {\n    "type": "AddressCredential",\n    "children": [\n      {\n        "type": "Line1Credential"\n      },\n      {\n        "type": "Line2Credential"\n      },\n      {\n        "type": "CityCredential"\n      },\n      {\n        "type": "StateCredential"\n      },\n      {\n        "type": "CountryCredential"\n      },\n      {\n        "type": "ZipCodeCredential"\n      }\n    ],\n    "allowUserInput": true\n  },\n  {\n    "type": "BirthDateCredential",\n    "allowUserInput": true\n  },\n  {\n    "type": "SsnCredential",\n    "allowUserInput": true\n  }\n]\n'})})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},9970:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=t(5893),s=t(1151);const r={},a=void 0,d={id:"reusables/credential-request-code-snippet",title:"credential-request-code-snippet",description:"",source:"@site/docs/reusables/credential-request-code-snippet.mdx",sourceDirName:"reusables",slug:"/reusables/credential-request-code-snippet",permalink:"/reusables/credential-request-code-snippet",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},l={},c=[];function o(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="CredentialRequest"',children:"{\n  type: string, // the type of credential data being requested\n  issuers: string[], // list of acceptable brandIds; if empty, all issuer brands are valid\n  required?: boolean, // @deprecated - Use mandatory field instead. If the credential is required\n  mandatory?: 'yes' | 'no' | 'if_available' // if the credential is required, not required, or required if available.\n  description?: string // a description field that is shown to the user; can be used to explain why the information is being requested\n  allowUserInput?: boolean // when true, the user will be shown an input to add their own information if they choose.\n  children?: CredentialRequest[] // list of sub-credentials relevant to the parent credential (e.g. FullNameCredential(FirstNameCredential, MiddleNameCredential LastNameCredential)\n}\n"})})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},9474:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=t(5893),s=t(1151);const r={},a=void 0,d={id:"reusables/sandbox-testing-credentials",title:"sandbox-testing-credentials",description:"To test in our sandbox environment, you can use our test brand and user:",source:"@site/docs/reusables/sandbox-testing-credentials.mdx",sourceDirName:"reusables",slug:"/reusables/sandbox-testing-credentials",permalink:"/reusables/sandbox-testing-credentials",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},l={},c=[];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(n.admonition,{title:"Sandbox Testing",type:"tip",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"To test in our sandbox environment, you can use our test brand and user"}),":"]}),(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"Test Brand API Credentials"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Sandbox API Key"',children:"yVg3LEnF08y0MDmpHcPxB+sZWFcDARmPRKdY2M906ng=\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Sandbox URL"',children:"https://core-api.sandbox-verifiedinc.com\n"})})]}),(0,i.jsxs)(n.p,{children:["To get an API key for your own brand, email us at ",(0,i.jsx)(n.a,{href:"mailto:Support@Verified.Inc",children:"Support@Verified.Inc"}),"."]}),(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"Test User Login Credentials"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Phone"',children:"+10123456789\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Email"',children:"richard@piedpiper.net\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Verification Code"',children:"111111\n"})})]}),(0,i.jsxs)(n.p,{children:["These are Hooli and Richard Hendricks \u2014 yes, the ones from ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Silicon_Valley_(TV_series)",children:(0,i.jsx)(n.em,{children:"Silicon Valley"})}),"! \ud83d\ude02"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);