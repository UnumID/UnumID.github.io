"use strict";(self.webpackChunkverified_inc=self.webpackChunkverified_inc||[]).push([[7371,2240,556],{1778:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var t=i(5893),s=i(1151);const r={},a=void 0,d={id:"reusables/atomic-credential-example",title:"atomic-credential-example",description:"",source:"@site/docs/reusables/atomic-credential-example.mdx",sourceDirName:"reusables",slug:"/reusables/atomic-credential-example",permalink:"/reusables/atomic-credential-example",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},o=[];function l(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Example Atomic EmailCredential"',children:'{\n  "id": "8a1d4e35-413d-496b-b499-8810b55cfb5c", // the credential id\n  // highlight-start\n  "type": "EmailCredential", // the type of credential\n  // highlight-end\n  "issuer": "32ef9562-312d-4a8b-8f3e-ccb8df500b55", // the brand uuid of the issuer\n  "issuanceDate": "1671847264479", // date the credential was issued in milliseconds since unix epoch\n  "expirationDate": "1871839024044", // date the credential expires in milliseconds since unix epoch\n  // highlight-start\n  // the data attribute must match the SsnCredential JSON schema properties as mentioned in the Data Schema section.\n  // i.e. https://schema.verified.inc/jsonSchema/SsnCredential\n  "data": {\n    "email": "test@verified.inc"\n  }\n  // highlight-end\n}\n'})})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},7815:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var t=i(5893),s=i(1151);const r={},a=void 0,d={id:"reusables/composite-credential-example",title:"composite-credential-example",description:"",source:"@site/docs/reusables/composite-credential-example.mdx",sourceDirName:"reusables",slug:"/reusables/composite-credential-example",permalink:"/reusables/composite-credential-example",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},o=[];function l(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Example Composite FullNameCredential"',children:'{\n  "id": "1be7c008-3f0c-4a21-9aad-69ca1c4251d2", // the credential id\n  // highlight-start\n  "type": "FullNameCredential", // the type of credential\n  // highlight-end\n  "issuer": "32ef9562-312d-4a8b-8f3e-ccb8df500b55", // the brand uuid of the issuer\n  "issuanceDate": "1671847264479", // date the credential was issued in milliseconds since unix epoch\n  "expirationDate": "1871839024044", // date the credential expires in milliseconds since unix epoch\n  // highlight-start\n  // the data attribute must match the FullNameCredential JSON schema properties as mentioned in the Data Schema section.\n  // i.e. https://schema.verified.inc/jsonSchema/FullNameCredential\n  "data": [\n    {\n      "id": "2e6a7b9a-e93e-43ba-98a9-c554f4e16457", // `FirstNameCredential` credential id\n      "type": "FirstNameCredential", // the type of credential\n      "issuer": "32ef9562-312d-4a8b-8f3e-ccb8df500b55", // the brand uuid of the issuer\n      "issuanceDate": "1671847264479", // date the credential was issued in milliseconds since unix epoch\n      "expirationDate": "1871839024044", // date the credential expires in milliseconds since unix epoch\n      "data": {\n        "firstName": "Richard"\n      }\n    },\n    {\n      "id": "9a5817ef-e621-4277-8c48-c8ee3776b6c4", // `LastNameCredential` credential id\n      "type": "LastNameCredential", // the type of credential\n      "issuer": "32ef9562-312d-4a8b-8f3e-ccb8df500b55", // the brand uuid of the issuer\n      "issuanceDate": "1671847264479", // date the credential was issued in milliseconds since unix epoch\n      "expirationDate": "1871839024044", // date the credential expires in milliseconds since unix epoch\n      "data": {\n        "lastName": "Hendricks"\n      }\n    }\n  ]\n  // highlight-end\n}\n'})})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},6622:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var t=i(5893),s=i(1151),r=(i(7874),i(106)),a=i(1778),d=i(7815);const c={id:"terminology",title:"Terminology",sidebar_label:"Terminology",slug:"/terminology"},o=void 0,l={id:"terminology",title:"Terminology",description:"Verified Inc. uses a few specialized terms and concepts. It's not necessary to understand these in full detail, but knowing a little about them will help you deploy and use Verified Inc. tech.",source:"@site/docs/terminology.mdx",sourceDirName:".",slug:"/terminology",permalink:"/terminology",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"terminology",title:"Terminology",sidebar_label:"Terminology",slug:"/terminology"},sidebar:"sidebar",previous:{title:"Issue to Earn",permalink:"/issue-to-earn"},next:{title:"API",permalink:"/api-overview"}},h={},u=[{value:"Credential",id:"credential",level:2},{value:"Atomic Credentials",id:"atomic-credentials",level:3},{value:"Composite Credentials",id:"composite-credentials",level:3},{value:"Request",id:"request",level:2},{value:"User",id:"user",level:2},{value:"User Identifier",id:"user-identifier",level:2},{value:"Brand",id:"brand",level:2},{value:"Customer",id:"customer",level:2}];function m(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Verified Inc. uses a few specialized terms and concepts. It's not necessary to understand these in full detail, but knowing a little about them will help you deploy and use Verified Inc. tech."}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"We've included helpful tooltips"})," like ",(0,t.jsx)(r.Z,{text:"Whoa, a tooltip! \ud83d\ude0e",children:"this one"})," (hover over it) throughout the docs. These offer quick definitions, examples, and links to dive in deeper. Anytime you see an underline, hover over it to see the tooltip!"]}),(0,t.jsxs)(n.p,{children:["The tooltips you'll see most often refer to the terms described in this section (for example: ",(0,t.jsx)(r.Z,{type:"credential"}),")."]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["The ",(0,t.jsx)(n.a,{href:"#main-terms",children:"main terms"})," to know are:"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#credential",children:"credential"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#request",children:"request"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#user",children:"user"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#brand",children:"brand"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#customer",children:"customer"})})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"credential",children:"Credential"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"credential"})," is a collection of data about a person. It's issued by a company and can be requested by other network participants, gated by the user's consent."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," ACME Lending issues a KYC verification credential to Richard (an ACME user). This includes Richard's contact information and account numbers, as well as a level of confidence in the accuracy of the data."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Components:"})," A company issues credentials using the ",(0,t.jsx)(n.a,{href:"/api-overview#issue-credentials",children:"/credentials"})," API endpoint. The data is stored securely using a data privacy vault and is only available to the user and brands the user agrees to share with."]}),"\n",(0,t.jsx)(n.p,{children:"At a high level, to issue a credential a company inputs three pieces of information:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"type of the credential"}),"\n",(0,t.jsx)(n.li,{children:"identifier for the person"}),"\n",(0,t.jsx)(n.li,{children:"data about the person"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The data schema must match the corresponding credential type. Information on the data formats for each type can be found in the ",(0,t.jsx)(n.a,{href:"/schema",children:"Data Schema"})," section."]}),"\n",(0,t.jsx)(n.h3,{id:"atomic-credentials",children:"Atomic Credentials"}),"\n",(0,t.jsxs)(n.p,{children:['Atomic credentials are the most basic credentials. They are the building blocks of more complex, "composite credentials". For example, an ',(0,t.jsx)(n.code,{children:"EmailCredential"})," is an atomic credential."]}),"\n",(0,t.jsx)(a.default,{}),"\n",(0,t.jsx)(n.h3,{id:"composite-credentials",children:"Composite Credentials"}),"\n",(0,t.jsxs)(n.p,{children:["Composite credentials are credentials that are made up of multiple atomic credentials. For example, a ",(0,t.jsx)(n.code,{children:"FullNameCredential"})," is made up of a ",(0,t.jsx)(n.code,{children:"FirstNameCredential"})," and a ",(0,t.jsx)(n.code,{children:"LastNameCredential"}),"."]}),"\n",(0,t.jsx)(d.default,{}),"\n",(0,t.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"request"})," (or ",(0,t.jsx)("i",{children:"credentials request"}),") is a request for ",(0,t.jsx)("a",{href:"/terminology#credential",children:(0,t.jsx)(r.Z,{type:"credential",children:"credentials"})}),". It's created when a customer successfully checks if a",(0,t.jsxs)("a",{href:"/terminology#user",children:[" ",(0,t.jsx)(r.Z,{type:"user"})]})," has matching credentials, via ",(0,t.jsx)(n.a,{href:"/api-overview#check-user-credentials",children:(0,t.jsx)(n.code,{children:"/hasMatchingCredentials"})}),". A request is only created if the user has the type of credentials the customer needs."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," Hooli FinTech checks if Richard has a SSN and FullName credential issued by ACME Lending. Because he does, a request is created for those credentials specifically from ACME Lending. Hooli presents this request to Richard by directing him to the ",(0,t.jsx)(n.code,{children:"url"})," received in the ",(0,t.jsx)(n.code,{children:"/hasMatchingCredentials"})," response body."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Components:"})," A customer checks if a user has the needed types of credentials by using ",(0,t.jsx)(n.code,{children:"/hasMatchingCredentials"}),". If the ",(0,t.jsx)(r.Z,{type:"user"})," does not have the right credentials, then a request is not created. If the user does, a request is created and returned to the customer via the ",(0,t.jsx)(n.code,{children:"url"})," attribute in the ",(0,t.jsx)(n.code,{children:"/hasMatchingCredentials"})," response body."]}),"\n",(0,t.jsxs)(n.p,{children:["The customer then directs the user to the ",(0,t.jsx)(n.code,{children:"url"}),", where the user authenticates and agrees to share the relevant data."]}),"\n",(0,t.jsxs)(n.p,{children:["At a high level, to create a request, a customer inputs a list containing three pieces of information for each credential which makes up the ",(0,t.jsx)(n.code,{children:"credentialsRequests"})," atrribute."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"type of the credential"}),"\n",(0,t.jsxs)(n.li,{children:["acceptable ",(0,t.jsx)(r.Z,{type:"brand",children:"brand(s)"})," that issued the credential"]}),"\n",(0,t.jsx)(n.li,{children:"whether the credential is required or optional (defaults to required)"}),"\n",(0,t.jsx)(n.li,{children:"list of the sub-credentials that make up the credential (optional)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If multiple issuer brands are listed, a credential (of the correct type) from any one of them is acceptable. If none are listed, then any issuer brand is acceptable."}),"\n",(0,t.jsxs)(n.p,{children:["Additionally, the customer must input a user identifier email address and/or phone identifier. You might notice these are the exact inputs to ",(0,t.jsx)(n.a,{href:"/api-overview#check-user-credentials",children:(0,t.jsx)(n.code,{children:"/hasMatchingCredentials"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The full details of the request object aren't that important or helpful to know, as it's completely internal to Verified Inc., but here's an example of a request for a SsnCredential, PhoneCredential and FullNameCredential from the same issuing brand."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "uuid": "7c9a2365-a2a3-4fec-b446-99b61a074fa8",\n  "id": "854b9889-013d-40a2-93b9-68b9cf8d2540",\n  "createdAt": "1673470082199",\n  "updatedAt": "1673470082200",\n  "email": "test@verified.inc",\n  "phone": null,\n  "description": "Please share the following information:",\n  // highlight-start\n  "credentialRequests": [\n    {\n      "type": "SsnCredential",\n      "issuers": ["d14ca24c-5323-4b79-9dfa-6471b014d68c"],\n      "required": true,\n      "description": "We use your social security number for identity verification and tax reporting."\n    },\n    {\n      "type": "PhoneCredential",\n      "issuers": ["d14ca24c-5323-4b79-9dfa-6471b014d68c"],\n      "mandatory": "yes",\n      "allowUserInput": true\n    },\n    {\n      "type": "FullNameCredential",\n      "issuers": ["d14ca24c-5323-4b79-9dfa-6471b014d68c"],\n      "required": true,\n      "children": [\n        {\n          "type": "FirstNameCredential",\n          "issuers": ["d14ca24c-5323-4b79-9dfa-6471b014d68c"]\n        }\n      ]\n    }\n  ],\n  // highlight-end\n  "expirationDate": null,\n  "brand": {\n    "uuid": "8005c39c-54d7-487e-bf4d-9eb5d39ed795",\n    "id": "32ef9562-312d-4a8b-8f3e-ccb8df500b55",\n    "createdAt": "1671595963109",\n    "updatedAt": "1671595963109",\n    "issuerName": "Hooli Issuer",\n    "receiverName": "Hooli Receiver",\n    "cardImageUrl": "https://VerifiedInc-dev-card-images.s3.us-west-2.amazonaws.com/ID+Card+-+Hooli.svg",\n    "customerUuid": "bba94256-5366-4bd5-8e4b-6568be7aaf54"\n  },\n  "user": {\n    "uuid": "77001639-9629-4bad-8d45-4cd0c2b7a7c8",\n    "id": "e31de809-ea49-4384-9d3e-6c70d5ff05c7",\n    "createdAt": "1671242870669",\n    "updatedAt": "1671242870669",\n    "phoneNumbers": ["+14043038080"],\n    "emailAddresses": ["test@verified.inc"]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"user",children:"User"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"user"})," is an individual in the Verified Inc. network that can share verified identity data (via ",(0,t.jsx)("a",{href:"/terminology#credential",children:(0,t.jsx)(r.Z,{type:"credential",children:"credentials"})}),"). Each user has at least one phone number or email address associated with them. They can have multiple of either."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Users can be referenced by email and/or phone, identifiers that you already have for your own user accounts. This prevents you from needing to use Verified Inc. specific user IDs."})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," Richard is a user in your account system and potentially a user in the Verified Inc. network. You have two email addresses and one phone number for him. You can use any of these identifiers to issue credentials to him or check if he has matching credentials."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Components:"})," You can issue credentials using ",(0,t.jsx)(n.a,{href:"/api-overview#issue-credentials",children:(0,t.jsx)(n.code,{children:"/credentials"})})," and check for matching credentials with ",(0,t.jsx)(n.a,{href:"/api-overview#check-user-credentials",children:(0,t.jsx)(n.code,{children:"/hasMatchingCredentials"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "id": "e31de809-ea49-4384-9d3e-6c70d5ff05c7",\n  "createdAt": "1671242870669",\n  "updatedAt": "1671242870669",\n  "emailAddresses": ["test@verified.inc"],\n  "phoneNumbers": []\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"user-identifier",children:"User Identifier"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"userIdentifier"})," is a value used to refer to an user. Due to the ubiquitous nature of ",(0,t.jsx)(n.code,{children:"phone"})," and/or ",(0,t.jsx)(n.code,{children:"email"})," values being associated with ",(0,t.jsx)("a",{href:"/terminology#user",children:"users"})," we have adopted to this term to refer to either of these values."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"A user can have many userIdentifiers of email and phones."})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," ",(0,t.jsx)(n.a,{href:"mailto:richard@pipedpiper.net",children:"richard@pipedpiper.net"})," is one of Richard Hendrick's user identifiers. He also has a phone number of +10123456789, another one of his user identifiers."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Components:"})," We have abstracted away the complexity of dealing with a third party uuid to refer to a user. Instead, you can use the user's email or phone number to refer to and issue credentials to users in our system."]}),"\n",(0,t.jsx)(n.h2,{id:"brand",children:"Brand"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"brand"})," is a customer entity that has a corresponding unique API key, name, and ID card image. Brands can issue, request and receive ",(0,t.jsx)("a",{href:"/terminology#credential",children:"credentials"})," to and from ",(0,t.jsx)("a",{href:"/terminology#user",children:"users"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"A customer can have one to many brands. A brand can be assoicated with only one customer."})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," ACME Bank is an Verified Inc. customer. However, they have two separate brands: ACME Lending and ACME Savings. Each brand has a unique API key, name, and ID card image."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Components:"})," Each brand has an associated parent customer. A customer can have one or more brands."]}),"\n",(0,t.jsx)(n.h2,{id:"customer",children:"Customer"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"customer"})," serves as a parent to brands and their corresponding API keys."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Our self service Dashboard is coming soon. It will allow you authenticate as a customer and create and manage your ",(0,t.jsx)(r.Z,{type:"brand",children:"brands"}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:'Throughout our docs we use verbiage similar to a "customer must make an api request" or "a customer must check credentials" however we are actually referring to a "brand". This is because a brand is the entity that has a unique API key. So when we say "customer" we technically mean a customer using one of its brand API keys.'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," ACME Bank is an Verified Inc. customer and has two brands: ACME Lending and ACME Savings."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Components:"})," The admins of the customer can manage individual ",(0,t.jsx)(r.Z,{type:"brand",children:"brand"})," settings."]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}}}]);