"use strict";(self.webpackChunkunum_id=self.webpackChunkunum_id||[]).push([[88],{5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(7462),r=n(7294),o=n(6010),l=n(2466),i=n(6775),s=n(1980),u=n(7392),c=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=h({queryString:n,groupId:a}),[p,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=s??p;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,o]),tabValues:o}}var f=n(2389);const w="tabList__CuJ",v="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==i&&(p(t),s(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",v,null==l?void 0:l.className,{"tabs__item--active":i===t})}),n??t)})))}function g(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function I(e){const t=b(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",w)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(g,(0,a.Z)({},e,t)))}function y(e){const t=(0,f.Z)();return r.createElement(I,(0,a.Z)({key:String(t)},e))}},9587:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),o=(n(4866),n(5162),n(7874),n(106));const l={id:"mobile-webwallet-sdk-ios",title:"Mobile WebWallet SDK - iOS",sidebar_label:"iOS WebWallet",slug:"/mobile-webwallet-sdk-ios"},i=void 0,s={unversionedId:"mobile-webwallet-sdk-ios",id:"mobile-webwallet-sdk-ios",title:"Mobile WebWallet SDK - iOS",description:"Docs for the Android WebWallet SDK are here.",source:"@site/docs/mobile-webwallet-sdk-ios.mdx",sourceDirName:".",slug:"/mobile-webwallet-sdk-ios",permalink:"/mobile-webwallet-sdk-ios",draft:!1,tags:[],version:"current",frontMatter:{id:"mobile-webwallet-sdk-ios",title:"Mobile WebWallet SDK - iOS",sidebar_label:"iOS WebWallet",slug:"/mobile-webwallet-sdk-ios"}},u={},c=[{value:"Overview",id:"overview",level:2},{value:"Minimum Requirements",id:"minimum-requirements",level:3},{value:"Integration Instructions",id:"integration-instructions",level:3},{value:"Performing User DID Association",id:"performing-user-did-association",level:3},{value:"Opening a web wallet web auth window",id:"opening-a-web-wallet-web-auth-window",level:3}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Docs for the Android WebWallet SDK are ",(0,r.kt)("a",{parentName:"em",href:"mobile-webwallet-sdk-android"},"here"),".")),(0,r.kt)("p",null,"This is a lightweight, fully native SDK that allows a host app to perform web wallet authentication functionality in a in-app browser. It works with both UIKit and SwiftUI native apps."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Before you begin:")," You need to be registered as Verified Inc. customer to use this SDK."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"An example project using this SDK can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/UnumID/UnumIDWebWallet-iOS"},"here"),". This serves as a useful technical reference.")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("h3",{id:"minimum-requirements"},"Minimum Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"iOS 13.0 and above"))),(0,r.kt)("h3",{id:"integration-instructions"},"Integration Instructions"),(0,r.kt)("p",null,"Add the SDK to your project\nCocoapods - Add the SDK to your ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile")," and run ",(0,r.kt)("inlineCode",{parentName:"p"},"pod install")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"source 'https://github.com/CocoaPods/Specs.git'\n\ntarget 'YourApp' do\n  use_frameworks!\n\n  pod 'UnumIDWebWallet'\nend\n")),(0,r.kt)("p",null,"Then to import the framework, all you have to do is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"import UnumIDWebWallet\n")),(0,r.kt)("h3",{id:"performing-user-did-association"},"Performing User DID Association"),(0,r.kt)("p",null,"More details on the ",(0,r.kt)(o.Z,{type:"DID",mdxType:"Tip"})," (",(0,r.kt)("inlineCode",{parentName:"p"},"did"),") association process can be found ",(0,r.kt)("a",{parentName:"p",href:"https://docs.verified.inc/1-click-or-free-use-case#associate-users-with-dids"},"here"),"."),(0,r.kt)("p",null,"When a host application would like to link a user with existing ",(0,r.kt)(o.Z,{type:"credential",mdxType:"Tip"},"credentials"),", the user ",(0,r.kt)(o.Z,{type:"DID",mdxType:"Tip"})," (",(0,r.kt)("inlineCode",{parentName:"p"},"did"),") association flow can be kicked off. This will require the userCode and the ",(0,r.kt)(o.Z,{type:"issuer",mdxType:"Tip"},"issuer")," ",(0,r.kt)(o.Z,{type:"DID",mdxType:"Tip"})," (",(0,r.kt)("inlineCode",{parentName:"p"},"did"),") to be passed. An optional value for the user email can be passed to help prefill data. An optional value of a color can also be passed to help match the color of title bar with the app appearance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"/**\nFunction for launching the web wallet and performing the user DID association flow.\n\n- parameter viewController UIViewController A provided view controller to launch the Web Wallet controller.\n- parameter parameters: Parameters Values used to setup the presentation.\n- parameter barTintColor: UIColor An optional value to set the color of the navigation bar.\n- parameter controlTintColor: UIColor An optional value to set the tint color of the controls.\n- parameter completion: (() -> Void)? An option completion when the presentation is finished.\n*/\npublic static func associate(\n    on viewController: UIViewController,\n    with parameters: Parameters,\n    barTintColor: UIColor? = nil,\n    controlTintColor: UIColor? = nil,\n    completion: (() -> Void)? = nil\n)\n")),(0,r.kt)("h3",{id:"opening-a-web-wallet-web-auth-window"},"Opening a web wallet web auth window"),(0,r.kt)("p",null,"If the host app already has the full url required for showing the web wallet, the url can be passed to the WebWallet SDK to open the web wallet.  An optional value of a color can also be passed to help match the color of title bar with the app theme."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"/**\nFunction for launching a provided url in-app browser.\n\n- parameter url: URL The url to be launched.\n- parameter viewController: UIViewController A provided view controller to launch the Web Wallet controller.\n- parameter barTintColor: UIColor An optional value to set the color of the navigation bar.\n- parameter controlTintColor: UIColor An optional value to set the tint color of the controls.\n- parameter completion: (() -> Void)? An option completion when the presentation is finished.\n*/\npublic static func launch(\n    url: URL,\n    on viewController: UIViewController,\n    barTintColor: UIColor? = nil,\n    controlTintColor: UIColor? = nil,\n    completion: (() -> Void)? = nil\n)\n")))}d.isMDXComponent=!0}}]);