"use strict";(self.webpackChunkunum_id=self.webpackChunkunum_id||[]).push([[215],{5162:(e,t,n)=>{n.d(t,{Z:()=>r});var l=n(7294),a=n(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var l=n(7462),a=n(7294),i=n(6010),r=n(2389),o=n(7392),s=n(7094),u=n(2466);const d="tabList__CuJ",p="tabItem_LNqP";function c(e){var t,n;const{lazy:r,block:c,defaultValue:m,values:h,groupId:b,className:g}=e,k=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=h?h:k.map((e=>{let{props:{value:t,label:n,attributes:l}}=e;return{value:t,label:n,attributes:l}})),w=(0,o.l)(f,((e,t)=>e.value===t.value));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===m?m:null!=(t=null!=m?m:null==(n=k.find((e=>e.props.default)))?void 0:n.props.value)?t:k[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:D,setTabGroupChoices:y}=(0,s.U)(),[x,S]=(0,a.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:I}=(0,u.o5)();if(null!=b){const e=D[b];null!=e&&e!==x&&f.some((t=>t.value===e))&&S(e)}const C=e=>{const t=e.currentTarget,n=N.indexOf(t),l=f[n].value;l!==x&&(I(t),S(l),null!=b&&y(b,String(l)))},W=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var l;const t=N.indexOf(e.currentTarget)+1;n=null!=(l=N[t])?l:N[0];break}case"ArrowLeft":{var a;const t=N.indexOf(e.currentTarget)-1;n=null!=(a=N[t])?a:N[N.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",d)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},g)},f.map((e=>{let{value:t,label:n,attributes:r}=e;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>N.push(e),onKeyDown:W,onFocus:C,onClick:C},r,{className:(0,i.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":x===t})}),null!=n?n:t)}))),r?(0,a.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function m(e){const t=(0,r.Z)();return a.createElement(c,(0,l.Z)({key:String(t)},e))}},8811:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var l=n(7462),a=(n(7294),n(3905));n(5488),n(5162),n(7874),n(106);const i={id:"mobile-webwallet-sdk-flutter",title:"Mobile WebWallet SDK - Flutter",sidebar_label:"Flutter WebWallet",slug:"/mobile-webwallet-sdk-flutter"},r=void 0,o={unversionedId:"mobile-webwallet-sdk-flutter",id:"mobile-webwallet-sdk-flutter",title:"Mobile WebWallet SDK - Flutter",description:"This is a lightweight, fully native SDK that allows a host app to perform web wallet authentication functionality in a in-app browser.",source:"@site/docs/mobile-webwallet-sdk-flutter.mdx",sourceDirName:".",slug:"/mobile-webwallet-sdk-flutter",permalink:"/mobile-webwallet-sdk-flutter",draft:!1,tags:[],version:"current",frontMatter:{id:"mobile-webwallet-sdk-flutter",title:"Mobile WebWallet SDK - Flutter",sidebar_label:"Flutter WebWallet",slug:"/mobile-webwallet-sdk-flutter"}},s={},u=[{value:"Overview",id:"overview",level:2},{value:"Minimum Requirements",id:"minimum-requirements",level:3},{value:"Required Permissions",id:"required-permissions",level:3},{value:"Setup",id:"setup",level:2},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:2},{value:"SDK Initialization",id:"sdk-initialization",level:3},{value:"SDK Handle deeplink",id:"sdk-handle-deeplink",level:3},{value:"SDK Logging",id:"sdk-logging",level:3},{value:"An example of passing parameters",id:"an-example-of-passing-parameters",level:3}],d={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is a lightweight, fully native SDK that allows a host app to perform web wallet authentication functionality in a in-app browser. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Before you begin:")," You need to be registered as Unum ID customer to use this SDK."),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("h3",{id:"minimum-requirements"},"Minimum Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Android 6.0 (Marshmallow) and above")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"iOS 15 and above")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"English language")," (internationalization coming soon)")),(0,a.kt)("h3",{id:"required-permissions"},"Required Permissions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Camera:")," requested when you show the QR code scanner"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Biometrics/Passcode:")," requested when you call ",(0,a.kt)("inlineCode",{parentName:"li"},"initialize()"))),(0,a.kt)("p",null,"Permissions and any permission rational messages should be updated in the individual native sections of the host application."),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install the flutter plugin by adding it to your pubspec.yaml file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  webwallet:\n    git:\n      url: git@github.com:UnumID/UnumIDWebWallet-Flutter.git\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"sdk-initialization"},"SDK Initialization"),(0,a.kt)("p",null,"This function initializes the Unum ID SDK, allowing the host app to use it. It must be called before any other SDK functionality can be used. In most cases, it should be called when the application loads/comes to the foreground. Once onSuccess is returned, the developer will then be able to retrieve the saved did."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:webwallet/webwallet.dart';\n\n @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: const Text('WebWallet plugin example app'),\n        ),\n        body: Center(\n          child: TextButton(\n          style: ButtonStyle(\n            foregroundColor: MaterialStateProperty.all<Color>(Colors.blue),\n          ),\n          onPressed: () {\n            _webwalletPlugin.launchWebWallet(true, \"userCode\", \"test@unumid.co\", \"issuerDid\");\n           },\n          child: Text('Launch WebWallet')\n        ),\n        ),\n      ),\n    );\n  }\n}\n")),(0,a.kt)("h3",{id:"sdk-handle-deeplink"},"SDK Handle deeplink"),(0,a.kt)("p",null,"An example of handling deeplinks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},'\nimport \'package:webwallet/webwallet.dart\';\n\nclass WebWalletWidget extends StatelessWidget {\n  const WebWalletWidget({super.key});\n  @override\n  Widget build(BuildContext context) {\n    DeepLinkBloc _bloc = Provider.of<DeepLinkBloc>(context);\n    final _webwalletPlugin = Webwallet();\n    return StreamBuilder<String>(\n        stream: _bloc.state,\n        builder: (context, snapshot) {\n          if (!snapshot.hasData) {\n            return const Center(child: Text(\'No deep link was used\'));\n          } else {\n            return Center(\n                child: Padding(\n                    padding: const EdgeInsets.all(20.0),\n                    child: TextButton(\n                      style: ButtonStyle(\n                        foregroundColor:\n                            MaterialStateProperty.all<Color>(Colors.blue),\n                      ),\n                      onPressed: () {\n                         _webwalletPlugin.launchWebWallet(true, "userCode", "test@unumid.co", "issuerDid");\n                      },\n                      child: Text("${snapshot.data}"),\n                    )));\n          }\n        });\n  }\n}\n')),(0,a.kt)("h3",{id:"sdk-logging"},"SDK Logging"),(0,a.kt)("p",null,"Turn on SDK Logging"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:unumidflutter/unumidflutter.dart';\n\nUnumidflutter.turnOnLogging();\n")),(0,a.kt)("h3",{id:"an-example-of-passing-parameters"},"An example of passing parameters"),(0,a.kt)("p",null,"You can easily pass parameters to launch the WebWallet from the code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},'\n@override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n        home: Scaffold(\n      appBar: AppBar(\n        backgroundColor: Colors.blue,\n        title: const Text(\'WebWallet plugin example app\'),\n      ),\n      body: Center(\n          child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        crossAxisAlignment: CrossAxisAlignment.center,\n        children: [\n          Padding(\n              padding: const EdgeInsets.all(16.0),\n              child: Column(children: [\n                TextField(\n                    decoration: const InputDecoration(\n                      border: OutlineInputBorder(),\n                      hintText: \'Enter user code\',\n                    ),\n                    onChanged: (text) {\n                      setState(() {\n                        userCode = text;\n                      });\n                    }),\n                const SizedBox(height: 10),\n                TextField(\n                    decoration: const InputDecoration(\n                      border: OutlineInputBorder(),\n                      hintText: \'Enter user email\',\n                    ),\n                    onChanged: (text) {\n                      setState(() {\n                        userEmail = text;\n                      });\n                    }),\n                const SizedBox(height: 10),\n                TextField(\n                    decoration: const InputDecoration(\n                      border: OutlineInputBorder(),\n                      hintText: \'Enter issuer did\',\n                    ),\n                    onChanged: (text) {\n                      setState(() {\n                        issuerDid = text;\n                      });\n                    })\n              ])),\n          TextButton(\n            style: ButtonStyle(\n              foregroundColor: MaterialStateProperty.all<Color>(Colors.blue),\n            ),\n            onPressed: () {\n              if (Platform.isAndroid) {\n                _webwalletPlugin.androidSetStateValues(\n                    "issuer", userCode, userEmail);\n                _webwalletPlugin.androidPerformVerification("appId", "appKey",\n                    "workflowId", "transactionId", "deepLinkScheme");\n              } else {\n                _webwalletPlugin.launchWebWallet(true, userCode, userEmail,\n                    issuerDid, Colors.blue.toHex(), Colors.white.toHex());\n              }\n            },\n            child: const Text(\'Launch WebWallet\'),\n          ),\n        ],\n      )),\n    ));\n  }\n}\n\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The technical details of DIDs are not relevant to deploying or using Unum ID. You can think of DIDs as identifiers in the normal sense \u2014 unique, random strings of characters like UUIDs.")),(0,a.kt)("p",null,"When you ",(0,a.kt)("a",{parentName:"p",href:"#initialize"},"initialize")," the SDK, you can optionally include a DID."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Don't include a DID for a user who's new to the SDK.")," The SDK will generate a new one that you should store, associated with the user ID in your system."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Do include a DID for a user who returns to the SDK.")," The SDK will use this DID to access the correct stored data for that user.")),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},"DIDs are the ",(0,a.kt)("em",{parentName:"p"},"only")," identifiers the SDK understands, so it relies entirely on the host app to pass the correct one."),(0,a.kt)("p",{parentName:"admonition"},"For example, suppose Users 1 and 2 are associated with DIDs 1 and 2, respectively. If User 1 is using the host app, but the app passes DID 2 to the SDK, the SDK will give User 1 access to to User 2's data.")))}p.isMDXComponent=!0}}]);