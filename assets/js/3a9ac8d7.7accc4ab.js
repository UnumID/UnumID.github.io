(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{77:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return r})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return p}));var i=t(3),s=t(7),a=(t(0),t(90)),o={id:"web-sdk",title:"Web SDK",sidebar_label:"Web SDK",slug:"/web-sdk"},r={unversionedId:"web-sdk",id:"web-sdk",isDocsHomePage:!1,title:"Web SDK",description:"SDK which helps the client to manage how deeplink can be presented to holder",source:"@site/docs/web-sdk.mdx",slug:"/web-sdk",permalink:"/web-sdk",version:"current",sidebar_label:"Web SDK",sidebar:"sidebar",previous:{title:"Demo Mobile Apps",permalink:"/demo-mobile-apps"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]}],l={toc:c};function p(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"SDK which helps the client to manage how deeplink can be presented to holder"),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,"This library is available in Github, built with react framework."),Object(a.b)("p",null,"To add it to the react application, run ",Object(a.b)("inlineCode",{parentName:"p"},"yarn add verifier-client-sdk@https://github.com/UnumID/Verifier-Client-SDK.git")," or add the following to the ",Object(a.b)("inlineCode",{parentName:"p"},"dependencies")," section of the ",Object(a.b)("inlineCode",{parentName:"p"},"package.json")," and run ",Object(a.b)("inlineCode",{parentName:"p"},"yarn install"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},'"verifier-client-sdk": "https://github.com/UnumID/Verifier-Client-SDK.git"\n')),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"import React, { FC, useState } from 'react';\n\nimport UnumIDVerifier, {\n  EmailOptions,\n  SmsOptions,\n  PresentationRequestResponse,\n  SuccessResponse\n} from 'verifier-client-sdk';\n\nconst App: FC = () => {\n  const [presentationRequest, setPresentationRequest] = useState();\n\n  const createPresentationRequest = async (): Promise<PresentationRequestResponse> => {\n    // call your api endpoint to create a presentationRequest and return the response\n    const response = await callEndpoint();\n    // We recommend that you save the created PresentationRequest\n    // Passing it as a prop to the Verifier Widget will prevent the SDK from creating another\n    // if the widget is rerendered\n    setPresentationRequest(response);\n  };\n\n  const sendEmail = async (options: EmailOptions): Promise<SuccessResponse> => {\n    // call your api endpoint to send an email and return the response\n  };\n\n  const sendSms = async (options: SmsOptions): Promise<SuccessResponse> => {\n    // call your api endpoint to send an sms and return the response\n  };\n\n  const goToLogin = (): void => {\n    // navigate to your login page\n  };\n\n  return (\n    <UnumIDVerifier\n      applicationTitle=\"My Application\"\n      userInfo={{ email: 'test@test.com', phone: '555-5555' }}\n      createPresentationRequest={createPresentationRequest}\n      sendEmail={sendEmail}\n      sendSMS={sendSms}\n      goToLogin={goToLogin}\n      // Passing a PresentationRequest will prevent the Verifier Widget from calling createPresentationRequest\n      // and creating a new one\n      presentationRequest={presentationRequest}\n    />\n  );\n}\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Client reference application")," is available at Git and can be cloned using\n",Object(a.b)("inlineCode",{parentName:"p"},"git clone https://github.com/UnumID/Verifier-Client-SDK-Client-Reference-App.git"),". "))}p.isMDXComponent=!0}}]);